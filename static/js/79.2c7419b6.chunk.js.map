{"version":3,"sources":["views/admin/newsfeed/Newsfeed.tsx"],"names":["fields","key","_style","width","paddingLeft","label","textAlign","Newsfeed","props","dispatch","useDispatch","callApi","payload","callback","callApiAction","history","useHistory","query","URLSearchParams","location","search","page","Math","max","Number","get","useState","topCategory","setTopCategory","fromDate","setFromDate","toDate","setToDate","searchName","setSearchName","data","total","totalPages","loading","categories","setCategories","show","id","name","popupDeleteCategory","setPopupDeleteCategory","popupDeleteCategory2","setPopupDeleteCategory2","getCategories","newPage","method","api","config","rest","adminGetNewsfeedCategories","getTime","response","status","SUCCESS","map","item","index","no","ceil","push","useEffect","noItems","style","margin","isVisible","title","content","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","password","confirmPassword","body","adminDeleteNewsfeedCategory","handleDeleteCategory","handleClose","className","searchEmpty","callbackSearch","height","marginLeft","marginRight","type","checked","onChange","maxDate","Date","date","setDate","minDate","minHeight","items","noItemsViewSlot","hover","striped","scopedSlots","created_date","moment","format","top_category","type_key","handleChangeCheckbox","action","color","variant","shape","size","onClick","pagination"],"mappings":"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","file":"static/js/79.2c7419b6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { CDataTable, CPagination, CButton } from '@coreui/react';\nimport moment from 'moment';\nimport { ConfirmPopup, ConfirmPopupPassword, DatePicker } from '../../../components';\nimport Search from '../../../components/search/Search';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { pagination } from '../../../extensions';\n\nconst fields = [\n  { key: 'no', _style: { width: '15%', paddingLeft: 20 } },\n  { key: 'name', label: 'Category name', _style: { width: '30%' } },\n  { key: 'created_date', _style: { width: '15%' } },\n  { key: 'top_category', _style: { width: '15%', textAlign: 'center' } },\n  { key: 'action', _style: { width: '15%', textAlign: 'center' } },\n];\n\ntype CategoryDataType = {\n  no: number;\n  id: string;\n  name: string;\n  created_date: number;\n  type_key: 'top_topic' | null;\n};\n\ntype CategoriesDataType = {\n  data: CategoryDataType[];\n  total: number;\n  totalPages: number;\n  loading: boolean;\n};\n\nconst pageSize = 10;\n\nconst Newsfeed: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: any) => dispatch(callApiAction(payload, callback));\n  const history = useHistory();\n  const query = new URLSearchParams(props.location?.search);\n  const page = Math.max(Number(query.get('page')) || 1, 1);\n  const [topCategory, setTopCategory] = useState(false);\n  const [fromDate, setFromDate] = useState<any>(null);\n  const [toDate, setToDate] = useState<any>(null);\n  const [searchName, setSearchName] = useState('');\n\n  const [categories, setCategories] = useState<CategoriesDataType>({\n    data: [],\n    total: 0,\n    totalPages: 0,\n    loading: true,\n  });\n  const [popupDeleteCategory, setPopupDeleteCategory] = useState({ show: false, id: '', name: '' });\n  const [popupDeleteCategory2, setPopupDeleteCategory2] = useState({ show: false, id: '', name: '' });\n\n  const getCategories = (newPage: number, searchName: string) => {\n    setCategories({ ...categories, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.adminGetNewsfeedCategories(\n          newPage,\n          searchName,\n          topCategory,\n          fromDate ? fromDate.getTime() / 1000 : null,\n          toDate ? toDate.getTime() / 1000 + 86399 : null,\n        ),\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          setCategories({\n            data: data.categories.map((item: any, index: number) => {\n              return { ...item, no: index + 1 + pageSize * (newPage - 1) };\n            }),\n            total: data.total,\n            totalPages: Math.ceil(data.total / pageSize),\n            loading: false,\n          });\n          if (page !== newPage) history.push(`?page=${newPage}`);\n        } else {\n          setCategories((categories: any) => {\n            return { ...categories, loading: false };\n          });\n        }\n      },\n    );\n  };\n\n  const pageChange = (newPage: number) => {\n    if (page !== newPage) {\n      history.push(`?page=${newPage}`);\n      getCategories(newPage, searchName);\n    }\n  };\n\n  useEffect(() => {\n    getCategories(page, searchName);\n  }, [fromDate, toDate, topCategory]);\n\n  const handleChangeCheckbox = (item: CategoryDataType) => {\n    setCategories({ ...categories, loading: true });\n    callApi({ method: 'put', api: config.rest.adminDeleteNewsfeedCategory(item.id) }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        getCategories(page, searchName);\n      }\n    });\n  };\n\n  let noItems = <div />;\n\n  if (!categories.loading) {\n    if (!categories.total) noItems = <div>No items found</div>;\n  }\n\n  const handleDeleteCategory = (id: string, password: string) => {\n    setPopupDeleteCategory({ show: false, id: '', name: '' });\n    setCategories({ ...categories, loading: true });\n    callApi({ method: 'post', api: config.rest.confirmPassword(), body: { password } }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        callApi({ method: 'delete', api: config.rest.adminDeleteNewsfeedCategory(id) }, (response: any) => {\n          const { status } = response;\n          if (status === SUCCESS) {\n            getCategories(page, searchName);\n          } else\n            setCategories((categories: any) => {\n              return { ...categories, loading: false };\n            });\n        });\n      } else\n        setCategories((categories: any) => {\n          return { ...categories, loading: false };\n        });\n    });\n  };\n\n  return (\n    <div style={{ width: '90%', margin: '10px auto' }}>\n      <ConfirmPopup\n        isVisible={popupDeleteCategory.show}\n        title=\"Delete Category\"\n        content={`Are you sure to delete the category \"${popupDeleteCategory.name}\"`}\n        leftButtonText=\"No\"\n        rightButtonText=\"Yes\"\n        leftButtonOnPress={() => setPopupDeleteCategory({ show: false, id: '', name: '' })}\n        rightButtonOnPress={() => {\n          setPopupDeleteCategory({ show: false, id: '', name: '' });\n          setPopupDeleteCategory2({ show: true, id: popupDeleteCategory.id, name: popupDeleteCategory.name });\n        }}\n      />\n      <ConfirmPopupPassword\n        isVisible={popupDeleteCategory2.show}\n        title=\"Delete Category\"\n        leftButtonText=\"Cancel\"\n        rightButtonText=\"Delete\"\n        content={`Please enter your password to delete category \"${popupDeleteCategory2.name}\"!`}\n        callback={(password: string) => handleDeleteCategory(popupDeleteCategory2.id, password)}\n        handleClose={() => setPopupDeleteCategory2({ show: false, id: '', name: '' })}\n      />\n      <div>\n        <h2>All Categories</h2>\n        <div className=\"d-flex align-items-center mt-4 mb-5\">\n          <Search\n            className=\"mr-5\"\n            searchName={searchName}\n            setSearchName={setSearchName}\n            searchEmpty={true}\n            callbackSearch={(searchName: string) => getCategories(1, searchName)}\n          />\n          Filter by top category\n          <input\n            style={{ width: 20, height: 20, marginLeft: 20, marginRight: 50 }}\n            type=\"checkbox\"\n            checked={topCategory}\n            onChange={() => setTopCategory(!topCategory)}\n          />\n          <div>From date:</div>\n          <div>\n            <DatePicker maxDate={toDate || new Date()} date={fromDate} setDate={setFromDate} />\n          </div>\n          <div>To date:</div>\n          <div>\n            <DatePicker minDate={fromDate} date={toDate} setDate={setToDate} />\n          </div>\n        </div>\n      </div>\n      <div style={{ minHeight: '65vh' }}>\n        <CDataTable\n          items={categories.data}\n          fields={fields}\n          loading={categories.loading}\n          noItemsViewSlot={noItems}\n          hover\n          striped\n          scopedSlots={{\n            no: (item: CategoryDataType) => (\n              <td className=\"align-middle\" style={{ paddingLeft: 20 }}>\n                {item.no}\n              </td>\n            ),\n            name: (item: CategoryDataType) => <td className=\"align-middle\">{item.name}</td>,\n            created_date: (item: CategoryDataType) => (\n              <td className=\"align-middle\">{moment(item.created_date * 1000).format('DD/MM/YYYY')}</td>\n            ),\n            top_category: (item: CategoryDataType) => (\n              <td className=\"align-middle\" style={{ textAlign: 'center' }}>\n                <input\n                  style={{ width: 20, height: 20 }}\n                  checked={item.type_key === 'top_topic'}\n                  type=\"checkbox\"\n                  onChange={() => handleChangeCheckbox(item)}\n                />\n              </td>\n            ),\n            action: (item: any) => (\n              <td className=\"align-middle\" style={{ textAlign: 'center' }}>\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  style={{\n                    marginRight: 10,\n                  }}\n                  onClick={() => history.push(`/admin/newsfeed/${item.id}`)}\n                >\n                  <i className=\"fas fa-eye\"> </i>\n                </CButton>\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={() => setPopupDeleteCategory({ show: true, id: item.id, name: item.name })}\n                >\n                  <i className=\"fas fa-trash-alt\"> </i>\n                </CButton>\n              </td>\n            ),\n          }}\n        />\n      </div>\n      {pagination(categories.totalPages, page, pageChange, categories.total)}\n    </div>\n  );\n};\n\nexport default Newsfeed;\n"],"sourceRoot":""}