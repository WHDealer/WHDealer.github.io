{"version":3,"sources":["views/admin/profile/ModalChangePassword.tsx","views/admin/profile/Profile.tsx","theme/palette.ts","theme/colors.ts","theme/size.ts","theme/spacing.ts","theme/styles.ts"],"names":["ChangePasswordSchema","Yup","shape","password","required","matches","config","validate","validatePassword","newPassword","confirmNewPassword","oneOf","ModalChangePassword","props","dispatch","useDispatch","useState","loading","setLoading","history","useHistory","showPassword","setShowPassword","ref","useRef","onCloseModal","handleClose","current","resetForm","className","size","centered","show","onClose","onClosed","closeOnBackdrop","closeButton","md","innerRef","enableReinitialize","initialValues","onSubmit","values","payload","callback","bodyData","old_password","new_password","method","api","rest","changeAdminPassword","body","response","status","SUCCESS","clearLS","push","callApiAction","validationSchema","errors","touched","dirty","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","handleReset","setTouched","setFieldValue","setFieldTouched","name","autoFocus","type","value","onChange","e","target","includes","invalid","maxLength","onBlur","onClick","style","cursor","display","justifyContent","disabled","color","width","Profile","auth","useSelector","state","callApi","first_name","firstName","setFirstName","last_name","lastName","setLastName","avatar","setAvatar","isFetching","setIsFetching","loadingLastName","setLoadingLastName","modal","firstNameInputRef","lastNameInputRef","isVisiblePopupChangePassword","setIsVisiblePopupChangePassword","showEditFirstName","setShowEditFirstName","showEditLastName","setShowEditLastName","errorFirstNameMsg","errorLastNameMsg","errorFormMsg","setErrorFormMsg","useEffect","window","onbeforeunload","updateAdminProfile","fieldEdit","updateProfileAdmin","console","log","updateProfile","newProfile","setUserLS","uploadFile","linkUpload","linkAvatar","file","FileReader","readAsDataURL","Headers","append","instance","axios","create","defaults","baseURL","headers","common","url","data","then","JSON","stringify","catch","error","uploadRef","position","src","logo","alt","borderWidth","borderColor","colors","dim","borderStyle","borderRadius","height","click","bottom","right","backgroundColor","gray3","id","accept","event","selectedFile","fileName","getUploadLink","link","getTemporaryUploadLink","files","URL","createObjectURL","FullName","marginTop","spacing","ContentContainer","Title","when","message","valueTypingExpressionsName","isEmpty","match","trim","a","focus","ErrorMessage","RowButtonContainer","CancelButton","SaveButton","email","styled","p","div","h1","CButton","palette","black","white","offWhite","orange","orangeDarker","lightGrey","lighterGrey","red","gray","lightBlue","mLightBgDarkPrimaryText","mLightBgDarkSecondaryText","mLightBgDarkDisabledText","mLightBgDarkHintText","mDarkBgLightPrimaryText","mDarkBgLightSecondaryText","mDarkBgLightDisabledText","mDarkBgLightHintText","mRed50","mRed100","mRed200","mRed300","mRed400","mRed500","mRed600","mRed700","mRed800","mRed900","mRedA100","mRedA200","mRedA400","mRedA700","mDeepPurple50","mDeepPurple100","mDeepPurple200","mDeepPurple300","mDeepPurple400","mDeepPurple500","mDeepPurple600","mDeepPurple700","mDeepPurple800","mDeepPurple900","mDeepPurpleA100","mDeepPurpleA200","mDeepPurpleA400","mDeepPurpleA700","mLightBlue50","mLightBlue100","mLightBlue200","mLightBlue300","mLightBlue400","mLightBlue500","mLightBlue600","mLightBlue700","mLightBlue800","mLightBlue900","mLightBlueA100","mLightBlueA200","mLightBlueA400","mLightBlueA700","mGreen50","mGreen100","mGreen200","mGreen300","mGreen400","mGreen500","mGreen600","mGreen700","mGreen800","mGreen900","mGreenA100","mGreenA200","mGreenA400","mGreenA700","mYellow50","mYellow100","mYellow200","mYellow300","mYellow400","mYellow500","mYellow600","mYellow700","mYellow800","mYellow900","mYellowA100","mYellowA200","mYellowA400","mYellowA700","mDeepOrange50","mDeepOrange100","mDeepOrange200","mDeepOrange300","mDeepOrange400","mDeepOrange500","mDeepOrange600","mDeepOrange700","mDeepOrange800","mDeepOrange900","mDeepOrangeA100","mDeepOrangeA200","mDeepOrangeA400","mDeepOrangeA700","mBlueGrey50","mBlueGrey100","mBlueGrey200","mBlueGrey300","mBlueGrey400","mBlueGrey500","mBlueGrey600","mBlueGrey700","mBlueGrey800","mBlueGrey900","mPink50","mPink100","mPink200","mPink300","mPink400","mPink500","mPink600","mPink700","mPink800","mPink900","mPinkA100","mPinkA200","mPinkA400","mPinkA700","mIndigo50","mIndigo100","mIndigo200","mIndigo300","mIndigo400","mIndigo500","mIndigo600","mIndigo700","mIndigo800","mIndigo900","mIndigoA100","mIndigoA200","mIndigoA400","mIndigoA700","mCyan50","mCyan100","mCyan200","mCyan300","mCyan400","mCyan500","mCyan600","mCyan700","mCyan800","mCyan900","mCyanA100","mCyanA200","mCyanA400","mCyanA700","mLightGreen50","mLightGreen100","mLightGreen200","mLightGreen300","mLightGreen400","mLightGreen500","mLightGreen600","mLightGreen700","mLightGreen800","mLightGreen900","mLightGreenA100","mLightGreenA200","mLightGreenA400","mLightGreenA700","mAmber50","mAmber100","mAmber200","mAmber300","mAmber400","mAmber500","mAmber600","mAmber700","mAmber800","mAmber900","mAmberA100","mAmberA200","mAmberA400","mAmberA700","mBrown50","mBrown100","mBrown200","mBrown300","mBrown400","mBrown500","mBrown600","mBrown700","mBrown800","mBrown900","mPurple50","mPurple100","mPurple200","mPurple300","mPurple400","mPurple500","mPurple600","mPurple700","mPurple800","mPurple900","mPurpleA100","mPurpleA200","mPurpleA400","mPurpleA700","mBlue50","mBlue100","mBlue200","mBlue300","mBlue400","mBlue500","mBlue600","mBlue700","mBlue800","mBlue900","mBlueA100","mBlueA200","mBlueA400","mBlueA700","mTeal50","mTeal100","mTeal200","mTeal300","mTeal400","mTeal500","mTeal600","mTeal700","mTeal800","mTeal900","mTealA100","mTealA200","mTealA400","mTealA700","mLime50","mLime100","mLime200","mLime300","mLime400","mLime500","mLime600","mLime700","mLime800","mLime900","mLimeA100","mLimeA200","mLimeA400","mLimeA700","mOrange50","mOrange100","mOrange200","mOrange300","mOrange400","mOrange500","mOrange600","mOrange700","mOrange800","mOrange900","mOrangeA100","mOrangeA200","mOrangeA400","mOrangeA700","mGrey50","mGrey100","mGrey200","mGrey300","mGrey400","mGrey500","mGrey600","mGrey700","mGrey800","mGrey900","background","backgroundGray","transparentBackground","border","primary","primaryLighter","secondary","line","text","success","shadow","storybookDarkBg","storybookTextColor","gray70","gray650","gray60","gray50","gray4","blue","gray2","gray1","gray5","gray6","darkBlue","transparent","scrim","purple","pink","yellow","lime","teal","indigo","textSize","h2","h3","h4","h5","h6","large","title","normal","subTitle","small","Container"],"mappings":"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","file":"static/js/52.b5c31bde.chunk.js","sourcesContent":["import {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CInvalidFeedback,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CRow,\n  CSpinner,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'react-tagsinput/react-tagsinput.css';\nimport * as Yup from 'yup';\nimport config from '../../../config';\nimport { ErrorMessage } from '../../../theme/styles';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport CIcon from '@coreui/icons-react';\nimport { clearLS } from '../../../utils';\nimport { useHistory } from 'react-router';\n\ninterface ModalChangePasswordProps {\n  show: boolean;\n  handleClose?: () => void;\n  onSuccess?: () => void;\n}\n\nconst ChangePasswordSchema = Yup.object().shape({\n  password: Yup.string()\n    ?.required('Your password must be at least 8 characters')\n    .matches(\n      config.validate.validatePassword(),\n      'Your password must be at least 8 characters long with one letter, and a number',\n    ),\n  newPassword: Yup.string()\n    ?.required('Please Enter new password')\n    .matches(\n      config.validate.validatePassword(),\n      'Your password must be at least 8 characters long with one letter, and a number',\n    ),\n  confirmNewPassword: Yup.string()\n    ?.required('Please Enter confirm password')\n    .oneOf([Yup.ref('newPassword'), null], 'Confirm password does not match with New Password')\n    .matches(\n      config.validate.validatePassword(),\n      'Your password must be at least 8 characters long with one letter, and a number',\n    ),\n});\n\nexport const ModalChangePassword: React.FC<ModalChangePasswordProps> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback: any) => dispatch(callApiAction(payload, callback));\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const onSubmit = (values: { password: string; newPassword: string; confirmNewPassword: string }) => {\n    const bodyData: any = {\n      old_password: values?.password,\n      new_password: values?.newPassword,\n    };\n\n    setLoading(true);\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.changeAdminPassword(),\n        body: bodyData,\n      },\n      (response: any) => {\n        setLoading(false);\n        const { status } = response;\n        if (status === SUCCESS) {\n          onCloseModal();\n          clearLS();\n          history.push('/admin/sign-in');\n        }\n      },\n    );\n  };\n\n  const [isFetching] = useState<boolean>(false);\n\n  const [showPassword, setShowPassword] = useState<{\n    password: boolean;\n    newPassword: boolean;\n    confirmNewPassword: boolean;\n  }>({\n    password: false,\n    newPassword: false,\n    confirmNewPassword: false,\n  });\n\n  const ref = useRef<any>(null);\n\n  const onCloseModal = () => {\n    props?.handleClose?.();\n    ref?.current?.resetForm?.();\n  };\n\n  return (\n    <div className=\"flex-row align-items-center\">\n      <CModal\n        size=\"lg\"\n        centered\n        show={props.show}\n        onClose={onCloseModal}\n        onClosed={onCloseModal}\n        closeOnBackdrop={false}\n      >\n        <CModalHeader closeButton>Change password</CModalHeader>\n        <CModalBody>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"12\">\n              <CCardGroup>\n                <CCard>\n                  <CCardBody>\n                    <Formik\n                      innerRef={ref}\n                      enableReinitialize={true}\n                      initialValues={{\n                        password: '',\n                        newPassword: '',\n                        confirmNewPassword: '',\n                      }}\n                      onSubmit={onSubmit}\n                      validationSchema={ChangePasswordSchema}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        status,\n                        dirty,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        handleReset,\n                        setTouched,\n                        setFieldValue,\n                        setFieldTouched,\n                      }) => (\n                        <CForm onSubmit={handleSubmit}>\n                          <CFormGroup>\n                            <CLabel>Old Password</CLabel>\n                            <CInputGroup>\n                              <CInput\n                                name=\"password\"\n                                autoFocus\n                                type={showPassword?.password ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={(e) => {\n                                  const target = e.target as HTMLTextAreaElement;\n                                  if (!target.value.includes(' ')) handleChange(e);\n                                }}\n                                invalid={touched.password && !!errors.password}\n                                maxLength={16}\n                                onBlur={handleBlur}\n                              />\n                              <CInputGroupPrepend\n                                onClick={() => {\n                                  setShowPassword({\n                                    ...showPassword,\n                                    password: !showPassword.password,\n                                  });\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                <CInputGroupText>\n                                  <CIcon name={showPassword.password ? 'cil-lock-locked' : 'cil-lock-unlocked'} />\n                                </CInputGroupText>\n                              </CInputGroupPrepend>\n                              <CInvalidFeedback>{errors.password}</CInvalidFeedback>\n                            </CInputGroup>\n                            {/* {errors?.password && touched.password && <ErrorMessage>{errors?.password}</ErrorMessage>} */}\n                          </CFormGroup>\n\n                          <CFormGroup>\n                            <CLabel>New Password</CLabel>\n                            <CInputGroup>\n                              <CInput\n                                name=\"newPassword\"\n                                autoFocus\n                                type={showPassword?.newPassword ? 'text' : 'password'}\n                                value={values.newPassword}\n                                onChange={(e) => {\n                                  const target = e.target as HTMLTextAreaElement;\n                                  if (!target.value.includes(' ')) handleChange(e);\n                                }}\n                                invalid={touched.newPassword && !!errors.newPassword}\n                                maxLength={16}\n                                onBlur={handleBlur}\n                              />\n                              <CInputGroupPrepend\n                                onClick={() => {\n                                  setShowPassword({\n                                    ...showPassword,\n                                    newPassword: !showPassword.newPassword,\n                                  });\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                <CInputGroupText>\n                                  <CIcon name={showPassword.newPassword ? 'cil-lock-locked' : 'cil-lock-unlocked'} />\n                                </CInputGroupText>\n                              </CInputGroupPrepend>\n                            </CInputGroup>\n                            {errors?.newPassword && touched.newPassword && (\n                              <ErrorMessage>{errors?.newPassword}</ErrorMessage>\n                            )}\n                          </CFormGroup>\n\n                          <CFormGroup>\n                            <CLabel>Confirm Password</CLabel>\n                            <CInputGroup>\n                              <CInput\n                                name=\"confirmNewPassword\"\n                                autoFocus\n                                type={showPassword?.confirmNewPassword ? 'text' : 'password'}\n                                value={values.confirmNewPassword}\n                                onChange={(e) => {\n                                  const target = e.target as HTMLTextAreaElement;\n                                  if (!target.value.includes(' ')) handleChange(e);\n                                }}\n                                invalid={touched.confirmNewPassword && !!errors.confirmNewPassword}\n                                maxLength={16}\n                                onBlur={handleBlur}\n                              />\n                              <CInputGroupPrepend\n                                onClick={() => {\n                                  setShowPassword({\n                                    ...showPassword,\n                                    confirmNewPassword: !showPassword.confirmNewPassword,\n                                  });\n                                }}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                <CInputGroupText>\n                                  <CIcon\n                                    name={showPassword.confirmNewPassword ? 'cil-lock-locked' : 'cil-lock-unlocked'}\n                                  />\n                                </CInputGroupText>\n                              </CInputGroupPrepend>\n                            </CInputGroup>\n                            {errors?.confirmNewPassword && touched.confirmNewPassword && (\n                              <ErrorMessage>{errors?.confirmNewPassword}</ErrorMessage>\n                            )}\n                          </CFormGroup>\n                          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                            {/* <CButton\n                              onClick={onCloseModal}\n                              disabled={isFetching}\n                              color=\"danger\"\n                              style={{ width: 100, marginRight: spacing[3] }}\n                            >\n                              Cancel\n                            </CButton> */}\n                            <CButton\n                              disabled={!(isValid && dirty && !loading)}\n                              color=\"primary\"\n                              className=\"px-4\"\n                              style={{ width: 100 }}\n                              type=\"submit\"\n                            >\n                              {loading ? <CSpinner size=\"sm\" color=\"light\" /> : 'Update'}\n                            </CButton>\n                          </div>\n                        </CForm>\n                      )}\n                    </Formik>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CButton,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CFormGroup,\n  CImg,\n  CLabel,\n  CSpinner,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../../../store/auth/actions';\nimport { Prompt, RouteComponentProps } from 'react-router-dom';\nimport { setUserLS } from '../../../utils';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { Container } from '../../../theme/styles';\nimport styled from 'styled-components';\nimport { colors, spacing } from '../../../theme';\nimport logo from '../../admin/containers/logo.png';\nimport { ModalChangePassword } from './ModalChangePassword';\nimport { isEmpty } from 'lodash';\nimport axios from 'axios';\n\nconst Profile: React.FC<RouteComponentProps> = () => {\n  const auth = useSelector((state: any) => state.auth);\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const [firstName, setFirstName] = useState<string>(auth?.first_name || '');\n  const [lastName, setLastName] = useState<string>(auth?.last_name || '');\n\n  const [avatar, setAvatar] = useState<string>(auth?.avatar || '');\n\n  const [isFetching, setIsFetching] = useState<any>(false);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingLastName, setLoadingLastName] = useState<boolean>(false);\n  const [modal, setModal] = useState<any>(false);\n\n  const firstNameInputRef = useRef<any>(null);\n  const lastNameInputRef = useRef<any>(null);\n\n  const [isVisiblePopupChangePassword, setIsVisiblePopupChangePassword] = useState(false);\n\n  const [showEditFirstName, setShowEditFirstName] = useState(false);\n  const [showEditLastName, setShowEditLastName] = useState<boolean>(false);\n\n  const [errorFormMsg, setErrorFormMsg] = useState<{\n    errorFirstNameMsg: string;\n    errorLastNameMsg: string;\n  }>({\n    errorFirstNameMsg: '',\n    errorLastNameMsg: '',\n  });\n\n  useEffect(() => {\n    if (modal.show || showEditFirstName || showEditLastName) {\n      window.onbeforeunload = function () {\n        return true;\n      };\n    }\n\n    return () => {\n      window.onbeforeunload = null;\n    };\n  }, [modal.show, showEditFirstName, showEditLastName]);\n\n  // const addConfirmBeforeUnload = () => {\n  //   setModal(true);\n  // };\n  // const removeConfirmBeforeUnload = () => {\n  //   setModal(false);\n  // };\n\n  const updateAdminProfile = (fieldEdit: 'firstName' | 'lastName') => {\n    const bodyData: any = {\n      first_name: fieldEdit === 'firstName' ? firstName : auth?.first_name,\n      last_name: fieldEdit === 'lastName' ? lastName : auth?.last_name,\n    };\n    setIsFetching(true);\n    fieldEdit === 'firstName' ? setLoading(true) : setLoadingLastName(true);\n\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.updateProfileAdmin(),\n        body: bodyData,\n      },\n      (response) => {\n        setIsFetching(false);\n        setLoadingLastName(false);\n        setLoading(false);\n        const { status } = response;\n        fieldEdit === 'firstName' ? setLoading(false) : setLoadingLastName(false);\n        console.log(response);\n        if (status === SUCCESS) {\n          if (fieldEdit === 'firstName') {\n            setShowEditFirstName(false);\n            dispatch(\n              updateProfile({\n                first_name: firstName,\n              }),\n            );\n            const newProfile = { ...auth, first_name: firstName };\n            setUserLS(newProfile);\n          } else {\n            setShowEditLastName(false);\n\n            dispatch(\n              updateProfile({\n                last_name: lastName,\n              }),\n            );\n            const newProfile = { ...auth, last_name: lastName };\n            setUserLS(newProfile);\n          }\n        }\n      },\n    );\n  };\n\n  const onCloseModalChangePassword = () => {\n    setIsVisiblePopupChangePassword(false);\n  };\n\n  const onChangeFirstName = (value: string) => {\n    setFirstName(value);\n    if (isEmpty(value)) {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorFirstNameMsg: 'Please Enter First Name',\n      });\n    } else if (!isEmpty(value) && !value.match(/^[a-zßüÜöÖäÄ_][-\\wßüÜöÖäÄ ]*$/i)) {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorFirstNameMsg: 'First Name InValid',\n      });\n    } else {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorFirstNameMsg: '',\n      });\n    }\n  };\n\n  const onChangeLastName = (value: string) => {\n    setLastName(value);\n    if (isEmpty(value)) {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorLastNameMsg: 'Please Enter Last Name',\n      });\n    } else if (!isEmpty(value) && !value.match(/^[a-zßüÜöÖäÄ_][-\\wßüÜöÖäÄ ]*$/i)) {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorLastNameMsg: 'Last Name InValid',\n      });\n    } else {\n      setErrorFormMsg({\n        ...errorFormMsg,\n        errorLastNameMsg: '',\n      });\n    }\n  };\n\n  const getTemporaryUploadLink = (selectedFile: any) => {\n    const file: File = (selectedFile as FileList)[0];\n    const fileName = file?.name;\n\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getUploadLink(fileName),\n      },\n      (response: any) => {\n        if (response.status === SUCCESS) {\n          uploadFile(response?.data?.link, response?.data?.avatar, file);\n        }\n      },\n    );\n  };\n\n  const uploadFile = (linkUpload: string, linkAvatar: string, file: any) => {\n    let reader = new FileReader();\n\n    reader.readAsDataURL(file);\n\n    var myHeaders = new Headers();\n    myHeaders.append('x-amz-acl', 'public-read');\n\n    var instance = axios.create();\n    delete instance.defaults.baseURL;\n    delete instance.defaults.headers.common['Authorization'];\n\n    var config: any = {\n      method: 'put',\n      url: linkUpload,\n      headers: {\n        'x-amz-acl': 'public-read',\n        'Content-Type': file?.type,\n      },\n      data: file,\n    };\n\n    instance(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response));\n        dispatch(\n          updateProfile({\n            avatar: linkAvatar,\n          }),\n        );\n        const newProfile = { ...auth, avatar: linkAvatar };\n        setUserLS(newProfile);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const uploadRef = useRef<any>(null);\n\n  return (\n    <Container>\n      <ModalChangePassword show={isVisiblePopupChangePassword} handleClose={onCloseModalChangePassword} />\n      <div className=\"admin-profile\">\n        <div style={{ position: 'relative' }}>\n          <CImg\n            src={avatar || logo}\n            alt=\"Avatar\"\n            style={{ borderWidth: 5, borderColor: colors.dim, borderStyle: 'solid', borderRadius: 100 }}\n            width=\"128\"\n            height=\"128\"\n          />\n          <CButton\n            onClick={() => {\n              uploadRef.current?.click();\n            }}\n            style={{ position: 'absolute', bottom: 0, right: 0, backgroundColor: colors.gray3, borderRadius: 20 }}\n          >\n            <CIcon name=\"cil-camera\" width=\"20px\" height=\"20px\" />\n          </CButton>\n          <input\n            className=\"avatar-user--input\"\n            type=\"file\"\n            id=\"myFile\"\n            name=\"filename\"\n            ref={uploadRef}\n            style={{ display: 'none' }}\n            accept=\"image/x-png,image/gif,image/jpeg\"\n            onChange={(event: any) => {\n              getTemporaryUploadLink(event?.target?.files);\n              const file: File = (event?.target?.files as FileList)[0];\n              setAvatar(URL.createObjectURL(file));\n            }}\n          />\n        </div>\n\n        <FullName>\n          {auth.first_name} {auth.last_name}\n        </FullName>\n        <CButton\n          color=\"info\"\n          onClick={() => {\n            setIsVisiblePopupChangePassword(true);\n          }}\n          style={{ marginTop: spacing[3] }}\n        >\n          Change password\n        </CButton>\n      </div>\n\n      <ContentContainer>\n        <Title>Personal profile</Title>\n        {showEditFirstName && <Prompt when={true} message=\"Changes you made may not be saved.\" />}\n        <CFormGroup>\n          <CLabel>First name</CLabel>\n          <CInputGroup>\n            <CInput\n              disabled={!showEditFirstName}\n              maxLength={50}\n              onChange={(e: any) => {\n                if (!e.target.value.includes(' ') && config.validate.valueTypingExpressionsName(e)) {\n                  onChangeFirstName(e.target.value);\n                }\n              }}\n              innerRef={firstNameInputRef}\n              value={firstName}\n              invalid={firstName.trim() === ' '}\n            />\n            <CInputGroupPrepend style={{ cursor: 'pointer' }}>\n              <CInputGroupText\n                onClick={async () => {\n                  await setShowEditFirstName(true);\n                  await firstNameInputRef?.current?.focus?.();\n                }}\n              >\n                <CIcon name={'cil-pencil'} />\n              </CInputGroupText>\n            </CInputGroupPrepend>\n          </CInputGroup>\n          {errorFormMsg?.errorFirstNameMsg && <ErrorMessage>{errorFormMsg?.errorFirstNameMsg}</ErrorMessage>}\n          {showEditFirstName && (\n            <RowButtonContainer>\n              <CancelButton\n                disabled={isFetching}\n                onClick={() => {\n                  setShowEditFirstName(false);\n                  setErrorFormMsg({\n                    ...errorFormMsg,\n                    errorFirstNameMsg: '',\n                  });\n                  setFirstName(auth?.first_name);\n                }}\n              >\n                Cancel\n              </CancelButton>\n\n              <SaveButton\n                disabled={!firstName && !loading}\n                onClick={() => updateAdminProfile('firstName')}\n                color=\"info\"\n              >\n                {loading ? <CSpinner size=\"sm\" color=\"light\" /> : 'Save'}\n              </SaveButton>\n            </RowButtonContainer>\n          )}\n        </CFormGroup>\n        {showEditLastName && <Prompt when={true} message=\"Changes you made may not be saved.\" />}\n        <CFormGroup>\n          <CLabel>Last name</CLabel>\n          <CInputGroup>\n            <CInput\n              disabled={!showEditLastName}\n              maxLength={50}\n              innerRef={lastNameInputRef}\n              onChange={(e: any) => {\n                if (!e.target.value.includes(' ') && config.validate.valueTypingExpressionsName(e)) {\n                  onChangeLastName(e.target.value);\n                }\n              }}\n              value={lastName}\n            />\n            <CInputGroupPrepend style={{ cursor: 'pointer' }}>\n              <CInputGroupText\n                onClick={async () => {\n                  await setShowEditLastName(true);\n                  await lastNameInputRef?.current?.focus?.();\n                }}\n              >\n                <CIcon name={'cil-pencil'} />\n              </CInputGroupText>\n            </CInputGroupPrepend>\n          </CInputGroup>\n          {errorFormMsg?.errorLastNameMsg && <ErrorMessage>{errorFormMsg?.errorLastNameMsg}</ErrorMessage>}\n          {showEditLastName && (\n            <RowButtonContainer>\n              <CancelButton\n                disabled={isFetching}\n                onClick={() => {\n                  setShowEditLastName(false);\n                  setErrorFormMsg({\n                    ...errorFormMsg,\n                    errorLastNameMsg: '',\n                  });\n                  setLastName(auth?.last_name);\n                }}\n              >\n                Cancel\n              </CancelButton>\n              <SaveButton\n                disabled={!lastName && !loadingLastName}\n                onClick={() => updateAdminProfile('lastName')}\n                color=\"info\"\n              >\n                {loadingLastName ? <CSpinner size=\"sm\" color=\"light\" /> : 'Save'}\n              </SaveButton>\n            </RowButtonContainer>\n          )}\n        </CFormGroup>\n\n        <CFormGroup>\n          <CLabel>Email</CLabel>\n          <CInput value={auth?.email || ''} disabled />\n        </CFormGroup>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default Profile;\n\nconst FullName = styled.p`\n  text-align: center;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: ${spacing[3]}px;\n  margin-bottom: 0px;\n`;\n\nconst RowButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${spacing[4]}px;\n`;\n\nconst Title = styled.h1`\n  margin-top: ${spacing[3]}px;\n`;\n\nconst CancelButton = styled(CButton)`\n  width: 100px;\n`;\n\nconst SaveButton = styled(CancelButton)`\n  margin-left: ${spacing[4]}px;\n`;\n\nconst ContentContainer = styled.div`\n  padding-left: 20%;\n  padding-right: 20%;\n  margin-top: ${spacing[3]}px;\n`;\n\nconst ErrorMessage = styled.p`\n  color: ${colors.error};\n  font-size: 12px;\n  margin-top: ${spacing[2]}px;\n`;\n","export const palette = {\n  black: \"#1d1d1d\",\n  white: \"#ffffff\",\n  offWhite: \"#e6e6e6\",\n  orange: \"#FBA928\",\n  orangeDarker: \"#EB9918\",\n  lightGrey: \"#939AA4\",\n  lighterGrey: \"#CDD4DA\",\n  red: \"#ED3833\",\n  gray: \"#687187\",\n  lightBlue: \"#C5CEE0\",\n\n  /*\n   * material color\n   */\n  // Light Background Dark Text\n  mLightBgDarkPrimaryText: \"#DE000000\",\n  mLightBgDarkSecondaryText: \"#8A000000\",\n  mLightBgDarkDisabledText: \"#61000000\",\n  mLightBgDarkHintText: \"#61000000\",\n\n  // Dark Background Light Text\n  mDarkBgLightPrimaryText: \"#FFFFFFFF\",\n  mDarkBgLightSecondaryText: \"#B3FFFFFF\",\n  mDarkBgLightDisabledText: \"#80FFFFFF\",\n  mDarkBgLightHintText: \"#80FFFFFF\",\n\n  // material color palette\n  mRed50: \"#FFEBEE\",\n  mRed100: \"#FFCDD2\",\n  mRed200: \"#EF9A9A\",\n  mRed300: \"#E57373\",\n  mRed400: \"#EF5350\",\n  mRed500: \"#F44336\",\n  mRed600: \"#E53935\",\n  mRed700: \"#D32F2F\",\n  mRed800: \"#C62828\",\n  mRed900: \"#B71C1C\",\n  mRedA100: \"#FF8A80\",\n  mRedA200: \"#FF5252\",\n  mRedA400: \"#FF1744\",\n  mRedA700: \"#D50000\",\n\n  mDeepPurple50: \"#EDE7F6\",\n  mDeepPurple100: \"#D1C4E9\",\n  mDeepPurple200: \"#B39DDB\",\n  mDeepPurple300: \"#9575CD\",\n  mDeepPurple400: \"#7E57C2\",\n  mDeepPurple500: \"#673AB7\",\n  mDeepPurple600: \"#5E35B1\",\n  mDeepPurple700: \"#512DA8\",\n  mDeepPurple800: \"#4527A0\",\n  mDeepPurple900: \"#311B92\",\n  mDeepPurpleA100: \"#B388FF\",\n  mDeepPurpleA200: \"#7C4DFF\",\n  mDeepPurpleA400: \"#651FFF\",\n  mDeepPurpleA700: \"#6200EA\",\n\n  mLightBlue50: \"#E1F5FE\",\n  mLightBlue100: \"#B3E5FC\",\n  mLightBlue200: \"#81D4FA\",\n  mLightBlue300: \"#4FC3F7\",\n  mLightBlue400: \"#29B6F6\",\n  mLightBlue500: \"#03A9F4\",\n  mLightBlue600: \"#039BE5\",\n  mLightBlue700: \"#0288D1\",\n  mLightBlue800: \"#0277BD\",\n  mLightBlue900: \"#01579B\",\n  mLightBlueA100: \"#80D8FF\",\n  mLightBlueA200: \"#40C4FF\",\n  mLightBlueA400: \"#00B0FF\",\n  mLightBlueA700: \"#0091EA\",\n\n  mGreen50: \"#E8F5E9\",\n  mGreen100: \"#C8E6C9\",\n  mGreen200: \"#A5D6A7\",\n  mGreen300: \"#81C784\",\n  mGreen400: \"#66BB6A\",\n  mGreen500: \"#4CAF50\",\n  mGreen600: \"#43A047\",\n  mGreen700: \"#388E3C\",\n  mGreen800: \"#2E7D32\",\n  mGreen900: \"#1B5E20\",\n  mGreenA100: \"#B9F6CA\",\n  mGreenA200: \"#69F0AE\",\n  mGreenA400: \"#00E676\",\n  mGreenA700: \"#00C853\",\n\n  mYellow50: \"#FFFDE7\",\n  mYellow100: \"#FFF9C4\",\n  mYellow200: \"#FFF59D\",\n  mYellow300: \"#FFF176\",\n  mYellow400: \"#FFEE58\",\n  mYellow500: \"#FFEB3B\",\n  mYellow600: \"#FDD835\",\n  mYellow700: \"#FBC02D\",\n  mYellow800: \"#F9A825\",\n  mYellow900: \"#F57F17\",\n  mYellowA100: \"#FFFF8D\",\n  mYellowA200: \"#FFFF00\",\n  mYellowA400: \"#FFEA00\",\n  mYellowA700: \"#FFD600\",\n\n  mDeepOrange50: \"#FBE9E7\",\n  mDeepOrange100: \"#FFCCBC\",\n  mDeepOrange200: \"#FFAB91\",\n  mDeepOrange300: \"#FF8A65\",\n  mDeepOrange400: \"#FF7043\",\n  mDeepOrange500: \"#FF5722\",\n  mDeepOrange600: \"#F4511E\",\n  mDeepOrange700: \"#E64A19\",\n  mDeepOrange800: \"#D84315\",\n  mDeepOrange900: \"#BF360C\",\n  mDeepOrangeA100: \"#FF9E80\",\n  mDeepOrangeA200: \"#FF6E40\",\n  mDeepOrangeA400: \"#FF3D00\",\n  mDeepOrangeA700: \"#DD2C00\",\n\n  mBlueGrey50: \"#ECEFF1\",\n  mBlueGrey100: \"#CFD8DC\",\n  mBlueGrey200: \"#B0BEC5\",\n  mBlueGrey300: \"#90A4AE\",\n  mBlueGrey400: \"#78909C\",\n  mBlueGrey500: \"#607D8B\",\n  mBlueGrey600: \"#546E7A\",\n  mBlueGrey700: \"#455A64\",\n  mBlueGrey800: \"#37474F\",\n  mBlueGrey900: \"#263238\",\n\n  mPink50: \"#FCE4EC\",\n  mPink100: \"#F8BBD0\",\n  mPink200: \"#F48FB1\",\n  mPink300: \"#F06292\",\n  mPink400: \"#EC407A\",\n  mPink500: \"#E91E63\",\n  mPink600: \"#D81B60\",\n  mPink700: \"#C2185B\",\n  mPink800: \"#AD1457\",\n  mPink900: \"#880E4F\",\n  mPinkA100: \"#FF80AB\",\n  mPinkA200: \"#FF4081\",\n  mPinkA400: \"#F50057\",\n  mPinkA700: \"#C51162\",\n\n  mIndigo50: \"#E8EAF6\",\n  mIndigo100: \"#C5CAE9\",\n  mIndigo200: \"#9FA8DA\",\n  mIndigo300: \"#7986CB\",\n  mIndigo400: \"#5C6BC0\",\n  mIndigo500: \"#3F51B5\",\n  mIndigo600: \"#3949AB\",\n  mIndigo700: \"#303F9F\",\n  mIndigo800: \"#283593\",\n  mIndigo900: \"#1A237E\",\n  mIndigoA100: \"#8C9EFF\",\n  mIndigoA200: \"#536DFE\",\n  mIndigoA400: \"#3D5AFE\",\n  mIndigoA700: \"#304FFE\",\n\n  mCyan50: \"#E0F7FA\",\n  mCyan100: \"#B2EBF2\",\n  mCyan200: \"#80DEEA\",\n  mCyan300: \"#4DD0E1\",\n  mCyan400: \"#26C6DA\",\n  mCyan500: \"#00BCD4\",\n  mCyan600: \"#00ACC1\",\n  mCyan700: \"#0097A7\",\n  mCyan800: \"#00838F\",\n  mCyan900: \"#006064\",\n  mCyanA100: \"#84FFFF\",\n  mCyanA200: \"#18FFFF\",\n  mCyanA400: \"#00E5FF\",\n  mCyanA700: \"#00B8D4\",\n\n  mLightGreen50: \"#F1F8E9\",\n  mLightGreen100: \"#DCEDC8\",\n  mLightGreen200: \"#C5E1A5\",\n  mLightGreen300: \"#AED581\",\n  mLightGreen400: \"#9CCC65\",\n  mLightGreen500: \"#8BC34A\",\n  mLightGreen600: \"#7CB342\",\n  mLightGreen700: \"#689F38\",\n  mLightGreen800: \"#558B2F\",\n  mLightGreen900: \"#33691E\",\n  mLightGreenA100: \"#CCFF90\",\n  mLightGreenA200: \"#B2FF59\",\n  mLightGreenA400: \"#76FF03\",\n  mLightGreenA700: \"#64DD17\",\n\n  mAmber50: \"#FFF8E1\",\n  mAmber100: \"#FFECB3\",\n  mAmber200: \"#FFE082\",\n  mAmber300: \"#FFD54F\",\n  mAmber400: \"#FFCA28\",\n  mAmber500: \"#FFC107\",\n  mAmber600: \"#FFB300\",\n  mAmber700: \"#FFA000\",\n  mAmber800: \"#FF8F00\",\n  mAmber900: \"#FF6F00\",\n  mAmberA100: \"#FFE57F\",\n  mAmberA200: \"#FFD740\",\n  mAmberA400: \"#FFC400\",\n  mAmberA700: \"#FFAB00\",\n\n  mBrown50: \"#EFEBE9\",\n  mBrown100: \"#D7CCC8\",\n  mBrown200: \"#BCAAA4\",\n  mBrown300: \"#A1887F\",\n  mBrown400: \"#8D6E63\",\n  mBrown500: \"#795548\",\n  mBrown600: \"#6D4C41\",\n  mBrown700: \"#5D4037\",\n  mBrown800: \"#4E342E\",\n  mBrown900: \"#3E2723\",\n\n  mPurple50: \"#F3E5F5\",\n  mPurple100: \"#E1BEE7\",\n  mPurple200: \"#CE93D8\",\n  mPurple300: \"#BA68C8\",\n  mPurple400: \"#AB47BC\",\n  mPurple500: \"#9C27B0\",\n  mPurple600: \"#8E24AA\",\n  mPurple700: \"#7B1FA2\",\n  mPurple800: \"#6A1B9A\",\n  mPurple900: \"#4A148C\",\n  mPurpleA100: \"#EA80FC\",\n  mPurpleA200: \"#E040FB\",\n  mPurpleA400: \"#D500F9\",\n  mPurpleA700: \"#AA00FF\",\n\n  mBlue50: \"#E3F2FD\",\n  mBlue100: \"#BBDEFB\",\n  mBlue200: \"#90CAF9\",\n  mBlue300: \"#64B5F6\",\n  mBlue400: \"#42A5F5\",\n  mBlue500: \"#2196F3\",\n  mBlue600: \"#1E88E5\",\n  mBlue700: \"#1976D2\",\n  mBlue800: \"#1565C0\",\n  mBlue900: \"#0D47A1\",\n  mBlueA100: \"#82B1FF\",\n  mBlueA200: \"#448AFF\",\n  mBlueA400: \"#2979FF\",\n  mBlueA700: \"#2962FF\",\n\n  mTeal50: \"#E0F2F1\",\n  mTeal100: \"#B2DFDB\",\n  mTeal200: \"#80CBC4\",\n  mTeal300: \"#4DB6AC\",\n  mTeal400: \"#26A69A\",\n  mTeal500: \"#009688\",\n  mTeal600: \"#00897B\",\n  mTeal700: \"#00796B\",\n  mTeal800: \"#00695C\",\n  mTeal900: \"#004D40\",\n  mTealA100: \"#A7FFEB\",\n  mTealA200: \"#64FFDA\",\n  mTealA400: \"#1DE9B6\",\n  mTealA700: \"#00BFA5\",\n\n  mLime50: \"#F9FBE7\",\n  mLime100: \"#F0F4C3\",\n  mLime200: \"#E6EE9C\",\n  mLime300: \"#DCE775\",\n  mLime400: \"#D4E157\",\n  mLime500: \"#CDDC39\",\n  mLime600: \"#C0CA33\",\n  mLime700: \"#AFB42B\",\n  mLime800: \"#9E9D24\",\n  mLime900: \"#827717\",\n  mLimeA100: \"#F4FF81\",\n  mLimeA200: \"#EEFF41\",\n  mLimeA400: \"#C6FF00\",\n  mLimeA700: \"#AEEA00\",\n\n  mOrange50: \"#FFF3E0\",\n  mOrange100: \"#FFE0B2\",\n  mOrange200: \"#FFCC80\",\n  mOrange300: \"#FFB74D\",\n  mOrange400: \"#FFA726\",\n  mOrange500: \"#FF9800\",\n  mOrange600: \"#FB8C00\",\n  mOrange700: \"#F57C00\",\n  mOrange800: \"#EF6C00\",\n  mOrange900: \"#E65100\",\n  mOrangeA100: \"#FFD180\",\n  mOrangeA200: \"#FFAB40\",\n  mOrangeA400: \"#FF9100\",\n  mOrangeA700: \"#FF6D00\",\n\n  mGrey50: \"#FAFAFA\",\n  mGrey100: \"#F5F5F5\",\n  mGrey200: \"#EEEEEE\",\n  mGrey300: \"#E0E0E0\",\n  mGrey400: \"#BDBDBD\",\n  mGrey500: \"#9E9E9E\",\n  mGrey600: \"#757575\",\n  mGrey700: \"#616161\",\n  mGrey800: \"#424242\",\n  mGrey900: \"#212121\",\n}\n","import { palette } from \"./palette\";\n\nexport const colors = {\n  background: \"#ffffff\",\n  backgroundGray: \"#F1F2F3\",\n  transparentBackground: \"#00000055\",\n  border: \"#EDF1F7\",\n  primary: \"#ed3833\",\n  primaryLighter: \"#EE4953\",\n  secondary: \"#f3a805\",\n  line: palette.offWhite,\n  text: \"#22242a\",\n  dim: \"#cdcdd7\",\n  error: \"#ef4b5f\",\n  success: \"#27ae60\",\n  shadow: \"#2f3542\",\n  storybookDarkBg: palette.black,\n  storybookTextColor: palette.black,\n  white: \"#ffffff\",\n  gray70: \"#222B45\",\n  gray650: \"#687187\",\n  gray60: \"#8F9BB3\",\n  gray50: \"#C5CEE0\",\n  gray3: \"#cdcdd7\",\n  gray4: \"#8d92a3\",\n  blue: \"#3785D9\",\n  gray2: \"#f1f3f8\",\n  gray1: \"#F7F9FC\",\n  gray5: \"#798195\",\n  gray6: \"#E4E9F2\",\n  darkBlue: \"#2E3A59\",\n  palette,\n  transparent: \"rgba(0, 0, 0, 0)\",\n  link: \"#1890ff\",\n  scrim: \"rgba(0, 0, 0, 0.6)\",\n  purple: \"#722ed1\",\n  pink: \"#eb2f96\",\n  yellow: \"#fadb14\",\n  lime: \"#a0d911\",\n  teal: \"#13c2c2\",\n  indigo: \"#2f54eb\",\n};\n","const textSize = {\n  h1: 32,\n  h2: 28,\n  h3: 24,\n  h4: 20,\n  h5: 16,\n  h6: 12,\n  large: 20,\n  title: 18,\n  normal: 16,\n  subTitle: 14,\n  small: 12,\n};\n\nexport const size = { textSize };\n","/**\n * NOTE TO DEVS:\n *\n * Spacing should be consistent and whitespace thought of as a first class technique up\n * there with color and typefaces.\n *\n * Which type of scale you use is based on the design.\n *\n * If you've got simpler app, you may only need 6 items.  Or maybe you want a spacing scale\n * to be named:\n *\n * export const spacing = {\n *   tiny: 4,\n *   small: 8,\n *   medium: 12,\n *   large: 24,\n *   huge: 64\n * }\n *\n * Whatever you choose, try to stick with these, and not freestyle it everywhere.\n *\n * Feel free to delete this block.\n */\n\n/**\n * The available spacing.\n *\n * Here's the rough guideline.  Customize this for you usage.  It's ok to put exceptions\n * within the components themselves if they are truly exceptions.\n *\n * 0 = none    - nothing. only here to bust out of a zero-based array.\n * 1 = tiny    - elements contextually close to each other\n * 2 = smaller - for groups of closely related items or perhaps borders\n * 3 = small   - ?\n * 4 = medium  - ?\n * 5 = medium+ - ?\n * 6 = large   - between groups of content that aren't related?\n * 7 = huge    - ?\n * 8 = massive - an uncomfortable amount of whitespace\n */\nexport const spacing = [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100]\n","import styled from \"styled-components\";\nimport { colors, size, spacing } from \".\";\n\nexport const Container = styled.div`\n  width: 90%;\n  margin: 10px auto;\n`;\n\nexport const ErrorMessage = styled.p`\n  font-size: ${size.textSize.small}px;\n  color: ${colors.error};\n  margin-top: ${spacing[1]}px;\n`;"],"sourceRoot":""}