{"version":3,"sources":["views/user/personalInformation/ChangePassword.tsx","views/user/personalInformation/Profile.module.scss"],"names":["initialValues","old_password","password","passwordConfirmation","validationSchema","values","Yup","shape","min","required","matches","config","validate","validatePassword","oneOf","ChangePassword","useState","passwordShown","setPasswordShown","oldPassword","setOldPassword","setPasswordConfirmation","loading","setLoading","togglePasswordVisiblity","toggleOldPasswordVisiblity","togglePasswordConfirmationVisiblity","show","setShow","dispatch","useDispatch","history","useHistory","handleClose","className","title","content","up","upCallback","styles","changePasswordUser","bioContainer","bioTitle","cardWrapper","cardBody","onSubmit","payload","callback","newData","new_password","method","api","rest","body","enableLoading","msg","messages","forceChangePasswordFailure","response","status","id","SUCCESS","clearLS","push","callApiAction","errors","touched","dirty","handleChange","handleBlur","handleSubmit","isValid","inputPassword","label","type","placeholder","invalid","autoComplete","maxLength","value","onBlur","onChange","e","target","includes","name","inputTextPassword","iconPassword","onClick","invalidFeedBack","color","children","size","disabled","btnClassName","submit","module","exports"],"mappings":"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","file":"static/js/63.9c7ce66d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CRow,\n  CInvalidFeedback,\n  CFormGroup,\n  CSpinner,\n  CLabel,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { clearLS, validate } from '../../../utils';\nimport styles from './Profile.module.scss';\nimport { HBButton, HBModalConfirm } from '../../../hbBaseClass';\n\nconst initialValues = {\n  old_password: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    old_password: Yup.string()\n      .min(8, 'Your password must be at least 8 characters')\n      .required('Your password must be at least 8 characters')\n      .matches(\n        config.validate.validatePassword(),\n        'Your password must be at least 8 characters long with one letter, and a number',\n      ),\n    password: Yup.string()\n      .min(8, 'Your password must be at least 8 characters')\n      .required('Your password must be at least 8 characters')\n      .matches(\n        config.validate.validatePassword(),\n        'Your password must be at least 8 characters long with one letter, and a number',\n      ),\n    passwordConfirmation: Yup.string()\n      .required('Your password must be at least 8 characters')\n      .oneOf([Yup.ref('password'), null], 'Confirmation password does not match with New Password')\n      .matches(\n        config.validate.validatePassword(),\n        'Your password must be at least 8 characters long with one letter, and a number',\n      ),\n  });\n};\n\nconst ChangePassword: React.FC<RouteComponentProps> = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [oldPassword, setOldPassword] = useState(false);\n  const [passwordConfirmation, setPasswordConfirmation] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const callApi = (payload: any, callback: any) => dispatch(callApiAction(payload, callback));\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n  const toggleOldPasswordVisiblity = () => {\n    setOldPassword(oldPassword ? false : true);\n  };\n  const togglePasswordConfirmationVisiblity = () => {\n    setPasswordConfirmation(passwordConfirmation ? false : true);\n  };\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // const email = useSelector((state: any) => state.auth.email);\n\n  const handleClose = () => {\n    setShow(!show);\n  };\n\n  const onSubmit = (values: any) => {\n    const newData = {\n      old_password: values.old_password,\n      new_password: values.password,\n    };\n    setLoading(true);\n    callApi(\n      {\n        method: 'put',\n        api: config.rest.changePasswordUser(),\n        body: newData,\n        enableLoading: true,\n        msg: config.messages.forceChangePasswordFailure,\n      },\n      (response: any) => {\n        const { status, id } = response;\n        setLoading(false);\n\n        if (status === SUCCESS) {\n          if (id === '40') {\n            setShow(true);\n            clearLS();\n            history.push('/sign-in');\n          }\n        }\n      },\n    );\n  };\n\n  return (\n    <div className=\"hb-user\">\n      <HBModalConfirm\n        show={show}\n        handleClose={handleClose}\n        title=\"Passwort ändern\"\n        content=\"Das Passwort wurde erfolgreich geändert.\"\n        up=\"Schließen\"\n        upCallback={handleClose}\n      />\n      <div className={styles.changePasswordUser}>\n        <CContainer className={styles.bioContainer}>\n          <div className={`hb-title ${styles.title} ${styles.bioTitle}`}>Passwort ändern</div>\n          <CCardGroup>\n            <CCard className={styles.cardWrapper}>\n              <CCardBody className={styles.cardBody}>\n                <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n                  {({\n                    values,\n                    errors,\n                    touched,\n                    // status,\n                    dirty,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    // isSubmitting,\n                    isValid,\n                    // handleReset,\n                    // setTouched,\n                  }) => (\n                    <CForm onSubmit={handleSubmit}>\n                      <CFormGroup className={styles.inputPassword}>\n                        <CLabel className={styles.label}>Altes Passwort</CLabel>\n                        <CInput\n                          type={oldPassword ? 'text' : 'password'}\n                          placeholder=\"Altes Passwort\"\n                          invalid={touched.old_password && !!errors.old_password}\n                          autoComplete=\"current-password\"\n                          maxLength={16}\n                          value={values.old_password}\n                          onBlur={handleBlur}\n                          onChange={(e) => {\n                            const target = e.target as HTMLTextAreaElement;\n                            if (!target.value.includes(' ')) handleChange(e);\n                          }}\n                          name=\"old_password\"\n                          className={styles.inputTextPassword}\n                        />\n                        <i\n                          className={`${oldPassword ? 'hb-icon-eye-slash' : 'hb-icon-eye'} ${styles.iconPassword}  `}\n                          onClick={toggleOldPasswordVisiblity}\n                        />\n\n                        <CInvalidFeedback className={styles.invalidFeedBack}>{errors.old_password}</CInvalidFeedback>\n                      </CFormGroup>\n                      <CFormGroup className={styles.inputPassword}>\n                        <CLabel className={styles.label}>Neues Passwort</CLabel>\n                        <CInput\n                          type={passwordShown ? 'text' : 'password'}\n                          placeholder=\"Neues Passwort\"\n                          invalid={touched.password && !!errors.password}\n                          autoComplete=\"current-password\"\n                          maxLength={16}\n                          value={values.password}\n                          onBlur={handleBlur}\n                          onChange={(e) => {\n                            const target = e.target as HTMLTextAreaElement;\n                            if (!target.value.includes(' ')) handleChange(e);\n                          }}\n                          name=\"password\"\n                          className={styles.inputTextPassword}\n                        />\n                        <i\n                          className={`${passwordShown ? 'hb-icon-eye-slash' : 'hb-icon-eye'} ${styles.iconPassword}  `}\n                          onClick={togglePasswordVisiblity}\n                        />\n\n                        <CInvalidFeedback className={styles.invalidFeedBack}>{errors.password}</CInvalidFeedback>\n                      </CFormGroup>\n                      <CFormGroup className={styles.inputPassword}>\n                        <CLabel className={styles.label}>Neues Passwort wiederholen</CLabel>\n                        <CInput\n                          type={passwordConfirmation ? 'text' : 'password'}\n                          placeholder=\"Neues Passwort wiederholen\"\n                          invalid={touched.passwordConfirmation && !!errors.passwordConfirmation}\n                          autoComplete=\"current-password\"\n                          maxLength={16}\n                          value={values.passwordConfirmation}\n                          onBlur={handleBlur}\n                          onChange={(e) => {\n                            const target = e.target as HTMLTextAreaElement;\n                            if (!target.value.includes(' ')) handleChange(e);\n                          }}\n                          name=\"passwordConfirmation\"\n                          className={styles.inputTextPassword}\n                        />\n                        <i\n                          className={`${passwordConfirmation ? 'hb-icon-eye-slash' : 'hb-icon-eye'} ${\n                            styles.iconPassword\n                          }  `}\n                          onClick={togglePasswordConfirmationVisiblity}\n                        />\n\n                        <CInvalidFeedback className={styles.invalidFeedBack}>\n                          {errors.passwordConfirmation}\n                        </CInvalidFeedback>\n                      </CFormGroup>\n                      <div>\n                        {/* <CButton\n                                color=\"primary\"\n                                className=\"px-4\"\n                                type=\"submit\"\n                                disabled={!(isValid && dirty && !loading)}\n                                style={{ width: 100 }}\n                              >\n                                {loading ? <CSpinner size=\"sm\" color=\"light\" /> : 'Update'}\n                              </CButton> */}\n                        <HBButton\n                          color=\"petrol\"\n                          children={loading ? <CSpinner size=\"sm\" color=\"light\" /> : 'Passwort aktualisieren'}\n                          disabled={!(isValid && dirty && !loading)}\n                          btnClassName={styles.submit}\n                        />\n                      </div>\n                    </CForm>\n                  )}\n                </Formik>\n              </CCardBody>\n            </CCard>\n          </CCardGroup>\n        </CContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__rJ2X1\",\"profileContainer\":\"Profile_profileContainer__3wF2h\",\"title\":\"Profile_title__Z47aD\",\"bioTitle\":\"Profile_bioTitle__3ucFV\",\"leftWrapper\":\"Profile_leftWrapper__3Y16p\",\"userName\":\"Profile_userName__2wo_e\",\"avatarArea\":\"Profile_avatarArea__1KP-w\",\"avatarUser\":\"Profile_avatarUser__3LXjW\",\"overlay\":\"Profile_overlay__GczcO\",\"avatarUserButtonWrapper\":\"Profile_avatarUserButtonWrapper__obEk8\",\"avatarUserButton\":\"Profile_avatarUserButton__1BG9z\",\"formContainer\":\"Profile_formContainer__FqNPd\",\"form\":\"Profile_form__1V8TH\",\"formGroup\":\"Profile_formGroup__24ca1\",\"wrapperTitle\":\"Profile_wrapperTitle__3VZfa\",\"cardTitle\":\"Profile_cardTitle__2sNR-\",\"wrapperBtn\":\"Profile_wrapperBtn__30Mmj\",\"btnSubmit\":\"Profile_btnSubmit__1fqEK\",\"genderGroup\":\"Profile_genderGroup__2PvMZ\",\"btnNurse\":\"Profile_btnNurse__kE6_a\",\"contentNurse\":\"Profile_contentNurse__2EjQr\",\"uploadDocument\":\"Profile_uploadDocument__1-knE\",\"iconArrowNurse\":\"Profile_iconArrowNurse__1S1vJ\",\"modalBody\":\"Profile_modalBody__3o0OP\",\"modalBioTitle\":\"Profile_modalBioTitle__gQOGj\",\"mobdalBioBody\":\"Profile_mobdalBioBody__2unur\",\"btnEdit\":\"Profile_btnEdit__2APe1\",\"gender\":\"Profile_gender__3uTtV\",\"btnGender\":\"Profile_btnGender__32_RF\",\"inputText\":\"Profile_inputText__3sJ_v\",\"label\":\"Profile_label__35fsf\",\"dataOfBirth\":\"Profile_dataOfBirth__3oPMn\",\"date\":\"Profile_date__3VIeD\",\"valueDate\":\"Profile_valueDate__WB-QW\",\"valueDateDisable\":\"Profile_valueDateDisable__3hVJD\",\"iconDate\":\"Profile_iconDate__n0_jC\",\"changePasswordUser\":\"Profile_changePasswordUser__1Kv0m\",\"cardWrapper\":\"Profile_cardWrapper__2bc3n\",\"cardBody\":\"Profile_cardBody__14zzG\",\"inputPassword\":\"Profile_inputPassword__nLfcv\",\"inputTextPassword\":\"Profile_inputTextPassword__1cjGu\",\"iconPassword\":\"Profile_iconPassword__8Z-Gv\",\"invalidFeedBack\":\"Profile_invalidFeedBack__7_crA\",\"submit\":\"Profile_submit__3T48T\",\"bioContainer\":\"Profile_bioContainer__30P8I\",\"bioButton\":\"Profile_bioButton__3eVRF\",\"bioWrapper\":\"Profile_bioWrapper__D4L0N\",\"bio\":\"Profile_bio__2-1-C\",\"btnWrapper\":\"Profile_btnWrapper__HJ7yL\",\"btnGroupWrap\":\"Profile_btnGroupWrap__2Pcfh\"};"],"sourceRoot":""}