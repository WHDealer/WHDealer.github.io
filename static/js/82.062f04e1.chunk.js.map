{"version":3,"sources":["views/user/consulting/googleCalendarAPI.ts","views/user/consulting/GoogleCalendar.tsx"],"names":["DISCOVERY_DOCS","gapi","window","addEventToGoogleCalendar","event","a","load","console","log","client","init","apiKey","API_KEY","clientId","CLIENT_ID","discoveryDocs","scope","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","calendar","events","insert","calendarId","resource","execute","location","htmlLink","GoogleCalendar","props","query","URLSearchParams","search","summary","start","end","dispatch","useDispatch","dateTime","timeZone","reminders","useDefault","overrides","method","minutes","useEffect","loadingRequest"],"mappings":"+LAQMA,EAAiB,CAAC,iEAGlBC,EAAOC,OAAOD,KAEPE,EAAwB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACtCJ,EAAKK,KAAK,eAAV,sBAA0B,4BAAAD,EAAA,6DACxBE,QAAQC,IAAI,iBACZP,EAAKQ,OAAOC,KAAK,CACfC,OAAQC,IACRC,SAAUC,IACVC,cAAef,EACfgB,MAXS,oDAKa,SAQGf,EAAKgB,MAAMC,kBARd,UAQlBC,EARkB,OASPA,EAAaC,WAAWC,MATjB,gCAWHF,EAAaG,SAXV,OAaxBrB,EAAKQ,OAAOH,KAAK,WAAY,MAAM,WACjBL,EAAKQ,OAAOc,SAASC,OAAOC,OAAO,CACjDC,WAAY,UACZC,SAAUvB,IAGJwB,SAAQ,SAACxB,GACfF,OAAO2B,SAAWzB,EAAM0B,eApBJ,6CADY,2CAAH,sDCgCtBC,UAvCuC,SAACC,GAAW,IAAD,EACzDC,EAAQ,IAAIC,gBAAJ,UAAoBF,EAAMH,gBAA1B,aAAoB,EAAgBM,QAC5CC,EAAUH,EAAMZ,IAAI,YAAc,GAClCgB,EAAQJ,EAAMZ,IAAI,UAAY,GAC9BiB,EAAML,EAAMZ,IAAI,QAAU,GAE1BkB,EAAWC,cAEXpC,EAAQ,CACZgC,QAASA,EAGTC,MAAO,CACLI,SAAUJ,EACVK,SAAU,uBAEZJ,IAAK,CACHG,SAAUH,EACVI,SAAU,uBAIZC,UAAW,CACTC,YAAY,EACZC,UAAW,CAET,CAAEC,OAAQ,QAASC,QAAS,OAUlC,OALAC,qBAAU,WACRT,EAASU,eACT9C,EAAyBC,MAGpB","file":"static/js/82.062f04e1.chunk.js","sourcesContent":["import { GOOGLE_CLIENT_ID as CLIENT_ID, GOOGLE_API_KEY as API_KEY } from '../../../config';\n\ndeclare global {\n  interface Window {\n    gapi: any;\n  }\n}\n\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.events';\n\nconst gapi = window.gapi;\n\nexport const addEventToGoogleCalendar = async (event: any) => {\n  gapi.load('client:auth2', async () => {\n    console.log('loaded client');\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    });\n    const authInstance = await gapi.auth2.getAuthInstance();\n    const signedIn = authInstance.isSignedIn.get();\n\n    if (!signedIn) await authInstance.signIn();\n\n    gapi.client.load('calendar', 'v3', () => {\n      const request = gapi.client.calendar.events.insert({\n        calendarId: 'primary',\n        resource: event,\n      });\n\n      request.execute((event: any) => {\n        window.location = event.htmlLink;\n      });\n    });\n  });\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { loadingRequest } from '../../../store/loading/actions';\nimport { addEventToGoogleCalendar } from './googleCalendarAPI';\n\nconst GoogleCalendar: React.FC<RouteComponentProps> = (props) => {\n  const query = new URLSearchParams(props.location?.search);\n  const summary = query.get('summary') || '';\n  const start = query.get('start') || '';\n  const end = query.get('end') || '';\n\n  const dispatch = useDispatch();\n\n  const event = {\n    summary: summary,\n    // location: '800 Howard St., San Francisco, CA 94103',\n    // description: 'Really great refreshments',\n    start: {\n      dateTime: start,\n      timeZone: 'America/Los_Angeles',\n    },\n    end: {\n      dateTime: end,\n      timeZone: 'America/Los_Angeles',\n    },\n    // recurrence: ['RRULE:FREQ=DAILY;COUNT=2'],\n    // attendees: [{ email: 'lpage@example.com' }, { email: 'sbrin@example.com' }],\n    reminders: {\n      useDefault: false,\n      overrides: [\n        // { method: 'email', minutes: 24 * 60 },\n        { method: 'popup', minutes: 15 },\n      ],\n    },\n  };\n\n  useEffect(() => {\n    dispatch(loadingRequest());\n    addEventToGoogleCalendar(event);\n  });\n\n  return <div />;\n};\n\nexport default GoogleCalendar;\n"],"sourceRoot":""}