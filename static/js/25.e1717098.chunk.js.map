{"version":3,"sources":["views/user/signIn/SignIn.tsx","views/user/authContainers/Header.tsx","views/user/authContainers/Header.module.scss","views/user/authContainers/Container.tsx","views/user/authContainers/Container.module.scss","views/user/signIn/SignInUser.module.scss"],"names":["validationSchema","values","Yup","shape","email","trim","min","matches","config","validate","validateEmail","password","required","validatePassword","initialValues","initialDevicesBrowser","a","ls","get","pushToken","axios","post","rest","initialDevice","email_address","phone_number","push_token","subscribed","last_activate","first_session","device_name","sessions","app_version","country","ip_address","sdk_version","lat","long","usage_duration","language_code","external_user_id","segments","tags","then","response","data","message","status","set","device_id","catch","error","console","log","SignIn","props","history","useHistory","dispatch","useDispatch","callApi","payload","callback","callApiAction","useState","show","id","content","title","resendData","setResendData","passwordShown","setPasswordShown","togglePasswordVisiblity","handleClose","className","up","upCallback","down","downCallback","method","api","resendVerifyEmail","msg","messages","resendVerifyEmailFailure","onSubmit","signInUser","body","loading","signInFailure","SUCCESS","location","group_name","dataExtra","setUserLS","signIn","push","errors","touched","dirty","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","handleReset","setTouched","styles","type","placeholder","autoComplete","invalid","name","maxLength","value","onBlur","onChange","e","target","includes","inputText","inputPassword","inputTextPassword","iconPassword","onClick","lastFormGroup","xs","forgotPassword","to","pathname","state","color","children","disabled","btnClassName","btnSubmit","createAccount","register_link","Header","header","logoMain","module","exports","Container","wrapper","container","md","lg","xl","cardContainer","cardWrapper","cardBody"],"mappings":"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","file":"static/js/25.e1717098.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { CCol, CForm, CInput, CRow, CInvalidFeedback, CFormGroup } from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useTranslation } from 'react-i18next';\nimport { signIn } from '../../../store/auth/actions';\nimport config from '../../../config';\nimport { setUserLS, validate } from '../../../utils';\nimport { ls } from '../../../extensions';\nimport axios from 'axios';\nimport styles from './SignInUser.module.scss';\nimport { HBButton, HBModalConfirm } from '../../../hbBaseClass/index';\nimport ContainerAuth from '../authContainers/Container';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .min(3, 'Das E-Mail Format ist nicht korrekt.')\n      .matches(config.validate.validateEmail(), 'Das E-Mail Format ist nicht korrekt.'),\n    password: Yup.string()\n      .required('Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.')\n      .min(8, 'Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.')\n      .matches(\n        config.validate.validatePassword(),\n        'Ihr Passwort muss mindestens 8 Zeichen, eine Buchstabe und eine Zahl enthalten.',\n      ),\n  });\n};\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst initialDevicesBrowser = async (email: string) => {\n  let deviceId = ls.get('device_id');\n  if (deviceId) return;\n  let pushToken = ls.get('push_token');\n\n  await axios\n    .post(config.rest.initialDevice(), {\n      email_address: email,\n      phone_number: '',\n      push_token: pushToken || '',\n      subscribed: '',\n      last_activate: '',\n      first_session: '',\n      device_name: 'ReactJS',\n      sessions: '',\n      app_version: '',\n      country: '',\n      ip_address: '',\n      sdk_version: '',\n      lat: '',\n      long: '',\n      usage_duration: '',\n      language_code: '',\n      external_user_id: '',\n      segments: '',\n      tags: '',\n    })\n    .then(function (response) {\n      if (response.data.message.status === 'success') {\n        ls.set('device_id', response.data.data.device_id);\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nconst SignIn: React.FC<RouteComponentProps> = (props) => {\n  // const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const [resendData, setResendData] = useState<any>({ show: false, id: 0, content: '', title: '', email: '' });\n\n  // const [isUser, setIsUser] = useState(props.location?.state !== false);\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const onSubmit = (values: { email: string; password: string }) => {\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.signInUser(),\n        body: values,\n        loading: true,\n        msg: config.messages.signInFailure,\n      },\n      (response) => {\n        const { id, status, data } = response;\n        if (status !== SUCCESS) {\n          // id 22 => email has not been verified\n          if (id === '22')\n            setResendData({\n              show: true,\n              id: 22,\n              content:\n                'Ihre Mailadresse wurde noch nicht bestätigt. Bitte bestätigen Sie Ihre Mailadresse indem Sie auf den Aktivierungslink klicken.',\n              title: 'Login fehlgeschlagen',\n              email: values.email,\n            });\n          if (id === '28' || id === '23')\n            setResendData({\n              show: true,\n              id: 28 || 23,\n              content: 'Ungültige Mailadresse oder Passwort. Bitte versuchen Sie es erneut.',\n              title: 'Login fehlgeschlagen',\n            });\n          if (id === '26')\n            setResendData({\n              show: true,\n              id: 26,\n              content:\n                'Ihr Account wurde gesperrt. Bitte kontaktieren Sie unseren Kundenservice um den Account freizuschalten.',\n              title: 'Login fehlgeschlagen',\n            });\n        } else {\n          let location = '/newsfeed';\n          if (id === '21') location = '/init-profile';\n          else if (data.group_name === 'nurse') {\n            location = '/consulting';\n          }\n          const dataExtra = { ...data, email: values.email };\n          setUserLS(dataExtra);\n          dispatch(signIn(dataExtra));\n          initialDevicesBrowser(values.email);\n          history.push(location);\n        }\n      },\n    );\n  };\n\n  const handleClose = () => {\n    setResendData((resendData.show = false));\n  };\n  const resend = (email: any) => {\n    handleClose();\n    callApi({\n      method: 'get',\n      api: config.rest.resendVerifyEmail(email),\n      msg: config.messages.resendVerifyEmailFailure,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"petrol\">\n        <HBModalConfirm\n          show={resendData.show}\n          handleClose={handleClose}\n          title={resendData.title}\n          content={resendData.content}\n          up=\"Zurück zur Anmeldung\"\n          upCallback={handleClose}\n          down={resendData.id === 22 ? 'Weiter bearbeiten' : ''}\n          downCallback={() => (resendData.id === 22 ? resend(resendData.email) : {})}\n        />\n      </div>\n\n      <ContainerAuth className=\"FormSignIn-container\">\n        <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({\n            values,\n            errors,\n            touched,\n            status,\n            dirty,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            isValid,\n            handleReset,\n            setTouched,\n          }) => (\n            <CForm onSubmit={handleSubmit}>\n              <h1 className=\"form-card-title\">Willkommen Wir haben Sie vermisst!</h1>\n              <CFormGroup className={styles.email}>\n                <CInput\n                  type=\"text\"\n                  placeholder=\"E-Mail Adresse\"\n                  autoComplete=\"email\"\n                  invalid={values.email !== '' && touched.email && !!errors.email}\n                  name=\"email\"\n                  maxLength={50}\n                  value={values.email}\n                  onBlur={handleBlur}\n                  onChange={(e: any) => {\n                    if (!e.target.value.includes(' ')) handleChange(e);\n                  }}\n                  className={styles.inputText}\n                />\n                <CInvalidFeedback>{errors.email || ''}</CInvalidFeedback>\n              </CFormGroup>\n              <CFormGroup className={styles.inputPassword}>\n                <CInput\n                  type={passwordShown ? 'text' : 'password'}\n                  placeholder=\"Passwort\"\n                  invalid={values.password !== '' && touched.password && !!errors.password}\n                  autoComplete=\"current-password\"\n                  maxLength={16}\n                  value={values.password}\n                  onBlur={handleBlur}\n                  onChange={(e: any) => {\n                    if (!e.target.value.includes(' ')) handleChange(e);\n                  }}\n                  name=\"password\"\n                  className={styles.inputTextPassword}\n                />\n                <i\n                  className={`${passwordShown ? 'hb-icon-eye-slash' : 'hb-icon-eye'} ${styles.iconPassword}  `}\n                  onClick={togglePasswordVisiblity}\n                />\n\n                <CInvalidFeedback>{errors.password || ''}</CInvalidFeedback>\n              </CFormGroup>\n              <CFormGroup className={styles.lastFormGroup}>\n                <CRow>\n                  <CCol xs=\"12\" className={styles.forgotPassword}>\n                    <Link to={{ pathname: '/forgot-password', state: true }}>Passwort vergessen?</Link>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <HBButton\n                      color=\"violet\"\n                      children=\"Login\"\n                      disabled={!(isValid && dirty)}\n                      btnClassName={styles.btnSubmit}\n                    />\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <div className={styles.createAccount}>\n                      <div>Noch keinen Account?</div>\n                      <Link to={{ pathname: '/sign-up', state: true }} className={styles.register_link}>\n                        Hier Registrieren\n                      </Link>\n                    </div>\n                  </CCol>\n                </CRow>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </ContainerAuth>\n    </>\n  );\n};\n\nexport default SignIn;\n","import { CHeader } from '@coreui/react';\nimport React from 'react';\nimport { logoMain } from '../../../extensions';\nimport styles from './Header.module.scss';\n\nconst Header: React.FC = () => {\n  return <CHeader className={styles.header}>{logoMain}</CHeader>;\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Keph\"};","import { CCard, CCardBody, CCol, CContainer, CRow } from '@coreui/react';\nimport React from 'react';\nimport styles from './Container.module.scss';\nimport Header from './Header';\n\ntype Props = {\n  className?: string;\n  children?: React.ReactNode;\n}\n\nconst Container: React.FC<Props> = (props) => {\n  const { className = '', children } = props;\n\n  return (\n    <div className={`hb-user c-app c-default-layout flex-row align-items-center ${styles.wrapper} ${className}`}>\n      <Header />\n      <CContainer className={styles.container}>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"4\" lg=\"4\" xl=\"4\" className={styles.cardContainer}>\n            <CCard className={`p-1 ${styles.cardWrapper}`}>\n              <CCardBody className={styles.cardBody}>{children}</CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__z5goK\",\"cardContainer\":\"Container_cardContainer__3GnEz\",\"cardWrapper\":\"Container_cardWrapper__17yG1\",\"cardTitle\":\"Container_cardTitle__18hcX\",\"cardBody\":\"Container_cardBody__1YCba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"SignInUser_inputText__C1ONK\",\"email\":\"SignInUser_email__1aAO4\",\"inputPassword\":\"SignInUser_inputPassword__2mdRO\",\"inputTextPassword\":\"SignInUser_inputTextPassword__33kNS\",\"iconPassword\":\"SignInUser_iconPassword__15b61\",\"forgotPassword\":\"SignInUser_forgotPassword__33AqB\",\"btnSubmit\":\"SignInUser_btnSubmit__2jYaW\",\"createAccount\":\"SignInUser_createAccount__27AnW\",\"register_link\":\"SignInUser_register_link__3ujmB\",\"header\":\"SignInUser_header__1wp3R\",\"cardTitle\":\"SignInUser_cardTitle__25-RI\",\"lastFormGroup\":\"SignInUser_lastFormGroup__1sScs\"};"],"sourceRoot":""}