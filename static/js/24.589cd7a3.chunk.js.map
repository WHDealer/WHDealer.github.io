{"version":3,"sources":["views/admin/users/ModalCreateUser.tsx","views/admin/users/ModalUpdateUser.tsx","views/admin/users/PopupResetPassword.tsx","views/admin/users/ModalViewImage.tsx","views/admin/users/ModalViewDocuments.tsx","views/admin/users/ModalSendEmail.tsx","views/admin/users/Users.tsx","views/admin/containers/FieldName.tsx","views/user/consulting/Feedbacks.tsx"],"names":["validationSchema","values","emailExist","Yup","shape","first_name","trim","required","last_name","email","notOneOf","matches","config","validate","validateEmail","password","min","validatePassword","getValidationSchema","validationSchemas","validateSync","abortEarly","error","getErrorsFromValidationError","ModalCreateUser","props","t","useTranslation","dispatch","useDispatch","searchUsers","handleClose","show","initialValues","useState","text","setEmailExist","passwordShown","setPasswordShown","formRef","useRef","birthDate","setBirthDate","useEffect","current","resetForm","togglePasswordVisiblity","attention","setAttention","newHandleClose","className","centered","onClose","closeOnBackdrop","onClick","dirty","size","style","textAlign","display","justifyContent","width","color","md","innerRef","enableReinitialize","onSubmit","payload","callback","newValues","status_id","Number","gender","birth_date","formatDate","body","JSON","stringify","method","api","rest","createUser","loading","response","status","id","SUCCESS","validateForm","callApiAction","errors","touched","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","handleReset","setTouched","FieldName","label","type","placeholder","invalid","autoComplete","maxLength","value","capitalizeWords","onBlur","onChange","e","valueTypingExpressionsName","name","target","includes","cursor","checked","date","setDate","fullWidth","disabled","ModalUpdateUser","mappingUserType","msg","messages","createUserFailure","PopupResetPassword","userId","resetPassword","resetPasswordFailure","ModalViewImage","url","splitItems","split","isIframe","length","height","position","zIndex","top","left","background","flexDirection","alignItems","overflow","fontSize","title","border","src","minHeight","alt","maxWidth","maxHeight","defaultValue","signature","card_number","image_back","card_expires","image_front","card_location","date_of_birth","files_professional","files_consultation","renderImg","file","pageNumber","objectFit","ModalViewDocuments","callApi","userStatus","modalSendEmail","getUsers","setModalSendEmail","documents","setDocuments","modalViewImage","setModalViewImage","data","approval","isApproved","render","loadingSmall","moment","format","map","item","textOverflow","whiteSpace","link","file_name","onClosed","closeButton","ModalSendEmail","popupViewDocuments","handleCloseParent","content","setContent","borderRadius","userEmail","rows","fieldsNurse","key","_style","_classes","fieldsOther","initialValuesCreate","initialValuesUpdate","Users","isAdmin","useSelector","state","auth","group_name","query","URLSearchParams","location","search","paramType","get","paramStatus","fields","getStatus","listUserStatus","filter","searchName","setSearchName","setType","setStatus","total","totalPages","page","users","setUsers","createUserData","setCreateUserData","updateUserData","setUpdateUserData","popupResetData","setPopupResetData","setPopupViewDocuments","firstTime","setFirstTime","nurseId","nurseName","nurseThumbnail","nurseRating","modalFeedbacks","setModalFeedbacks","timeout","newType","newPage","user","index","no","createDate","Math","ceil","clearTimeout","setTimeout","noItems","handleCloseDocuments","margin","Feedbacks","marginTop","marginBottom","paddingLeft","onKeyDown","selected","setSelected","full","flex","items","noItemsViewSlot","hover","striped","scopedSlots","mappingGender","marginLeft","feed_back","rating","verify_email","statuses","visibility","handleShowDocuments","action","variant","marginRight","pagination","children","minWidth","ratingTypes","feedbacks","setFeedbacks","currentRating","setCurrentRating","getDetailFeedbacks","overflowY","overflowX","defaultAvatar","toFixed","ratingType","renderStars","Array","from","_","number_feedback","renderRatingSelect","user_comments","feedbackItem","user_id","avatar","feedback","customer_comments","modified_date","renderFeedback"],"mappings":"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","file":"static/js/24.589cd7a3.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  CModal,\n  CCol,\n  CModalHeader,\n  CRow,\n  CModalBody,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInvalidFeedback,\n  CFormGroup,\n  CSelect,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CModalFooter,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport config, { types } from '../../../config';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { capitalizeWords, formatDate, getErrorsFromValidationError } from '../../../utils';\nimport { DatePicker } from '../../../components';\nimport FieldName from '../containers/FieldName';\n\nconst validationSchema = function (values: any, emailExist: any) {\n  return Yup.object().shape({\n    first_name: Yup.string().trim().required('first-name-must-be-at-least-1'),\n    last_name: Yup.string().trim().required('last-name-must-be-at-least-1-c'),\n    email: Yup.string()\n      .notOneOf([emailExist.email], 'this-email-already-exists-ple')\n      .matches(config.validate.validateEmail(), 'email-format-is-incorrect')\n      .required('email-must-be-at-least-3-chara'),\n    password: Yup.string()\n      .trim()\n      .min(8, 'your-password-must-be-at-least')\n      .required('your-password-must-be-at-least')\n      .matches(config.validate.validatePassword(), 'your-password-must-be-at-least'),\n  });\n};\n\nconst validate = (getValidationSchema: any, emailExist: any) => {\n  return (values: any) => {\n    const validationSchemas = getValidationSchema(values, emailExist);\n    try {\n      validationSchemas.validateSync(values, { abortEarly: false });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\ninterface Props {\n  searchUsers: () => void;\n  handleClose: () => void;\n  show: boolean;\n  initialValues: any;\n}\n\nconst ModalCreateUser: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const { searchUsers, handleClose, show, initialValues } = props;\n  const [emailExist, setEmailExist] = useState({ email: '', text: '' });\n  const [passwordShown, setPasswordShown] = useState(true);\n  const formRef = useRef<any>(null);\n\n  const [birthDate, setBirthDate] = useState<any>(null);\n\n  useEffect(() => {\n    if (!show) return;\n    setBirthDate(null);\n    formRef.current.resetForm();\n  }, [show]);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const onSubmit = (values: {\n    first_name: string;\n    last_name: string;\n    email: string;\n    password: string;\n    type: string;\n    status_id: string;\n    gender: string;\n  }) => {\n    const newValues = {\n      first_name: values.first_name.trim(),\n      last_name: values.last_name.trim(),\n      email: values.email.trim(),\n      password: values.password.trim(),\n      status_id: Number(values.status_id),\n      gender: Number(values.gender),\n      birth_date: formatDate(birthDate),\n    };\n    const body = JSON.stringify(newValues);\n\n    callApi(\n      {\n        method: 'post',\n        api: config.rest.createUser(),\n        body: body,\n        loading: true,\n      },\n      (response) => {\n        const { status, text, id } = response;\n        if (status === SUCCESS) {\n          searchUsers();\n          handleClose();\n        } else if (id === '2') {\n          setEmailExist({ email: newValues.email, text: text });\n          formRef.current.validateForm();\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState(false);\n\n  const newHandleClose = () => {\n    formRef.current.resetForm();\n    props.handleClose();\n    setAttention(false);\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty && !birthDate) {\n      newHandleClose();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <div className=\"flex-row align-items-center\">\n      <CModal centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n        <CModalHeader>\n          {t('create-new-user')}\n          <i className=\"fa fa-close cursor-pointer\" onClick={showAttention} />\n        </CModalHeader>\n        <CModalBody className=\"popup--update-user\">\n          <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n            <CModalBody style={{ textAlign: 'center' }}>Are you sure you want to discard your changes?</CModalBody>\n            <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n              <button className=\"btn btn-danger\" style={{ width: 160 }} color=\"danger\" onClick={newHandleClose}>\n                Discard\n              </button>\n              <button style={{ width: 160 }} className=\"btn btn-primary\" onClick={() => setAttention(false)}>\n                Keep Editing\n              </button>\n            </CModalFooter>\n          </CModal>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"12\">\n              <CCardGroup>\n                <CCard className=\"popup--update-user__card--wrapper\">\n                  <CCardBody>\n                    <Formik\n                      innerRef={formRef}\n                      enableReinitialize={true}\n                      initialValues={initialValues}\n                      validate={validate(validationSchema, emailExist)}\n                      onSubmit={onSubmit}\n                    >\n                      {({\n                        values,\n                        errors,\n                        touched,\n                        status,\n                        dirty,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        handleReset,\n                        setTouched,\n                      }) => (\n                        <CForm onSubmit={handleSubmit}>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"First Name\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('first-name')}\n                                invalid={values.first_name.trim() !== '' && touched.first_name && !!errors.first_name}\n                                autoComplete=\"first_name\"\n                                maxLength={50}\n                                value={capitalizeWords(values.first_name)}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                                }}\n                                name=\"first_name\"\n                              />\n                              <CInvalidFeedback>{t(errors.first_name || '')}</CInvalidFeedback>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Last Name\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('last-name')}\n                                invalid={values.last_name.trim() !== '' && touched.last_name && !!errors.last_name}\n                                autoComplete=\"last_name\"\n                                maxLength={50}\n                                value={capitalizeWords(values.last_name)}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                                }}\n                                name=\"last_name\"\n                              />\n                              <CInvalidFeedback>{t(errors.last_name || '')}</CInvalidFeedback>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Email\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('email')}\n                                maxLength={50}\n                                invalid={values.email !== '' && touched.email && !!errors.email}\n                                autoComplete=\"email\"\n                                value={values.email}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (!e.target.value.includes(' ')) handleChange(e);\n                                }}\n                                name=\"email\"\n                              />\n                              <CInvalidFeedback>{t(errors.email || '')}</CInvalidFeedback>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Password\" width={110}>\n                              <CInputGroup>\n                                <CInput\n                                  type={passwordShown ? 'text' : 'password'}\n                                  placeholder={t('password')}\n                                  invalid={values.password !== '' && touched.password && !!errors.password}\n                                  autoComplete=\"password\"\n                                  maxLength={16}\n                                  value={values.password}\n                                  onBlur={handleBlur}\n                                  onChange={(e: any) => {\n                                    if (!e.target.value.includes(' ')) handleChange(e);\n                                  }}\n                                  name=\"password\"\n                                />\n                                <CInputGroupPrepend style={{ cursor: 'pointer' }}>\n                                  <CInputGroupText onClick={togglePasswordVisiblity}>\n                                    <CIcon name={passwordShown ? 'cil-lock-locked' : 'cil-lock-unlocked'} />\n                                  </CInputGroupText>\n                                </CInputGroupPrepend>\n                                <CInvalidFeedback>{t(errors.password || '')}</CInvalidFeedback>\n                              </CInputGroup>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Gender\" width={110}>\n                              <div className=\"d-flex\">\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"0\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '0'}\n                                />\n                                Male\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"1\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '1'}\n                                />\n                                Female\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"2\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '2'}\n                                />\n                                Other\n                              </div>\n                            </FieldName>\n                          </CFormGroup>\n                          <div className=\"mb-3\">\n                            <FieldName label=\"Date Of Birth\" width={110}>\n                              <DatePicker date={birthDate} setDate={setBirthDate} fullWidth />\n                            </FieldName>\n                          </div>\n                          <CFormGroup>\n                            <FieldName label=\"Status\" width={110}>\n                              <CSelect value={values.status_id} onChange={handleChange} name=\"status_id\">\n                                <option value={3}>Approved</option>\n                                <option value={2}>Disapproved</option>\n                              </CSelect>\n                            </FieldName>\n                          </CFormGroup>\n                          <div style={{ textAlign: 'right' }}>\n                            <CButton\n                              color=\"primary\"\n                              className=\"px-4\"\n                              type=\"submit\"\n                              disabled={\n                                !isValid ||\n                                !birthDate ||\n                                !['0', '1', '2'].includes(values.gender) ||\n                                (!dirty && birthDate === initialValues.birth_date)\n                              }\n                            >\n                              {t('create')}\n                            </CButton>\n                          </div>\n                        </CForm>\n                      )}\n                    </Formik>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default ModalCreateUser;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CModal,\n  CCol,\n  CModalHeader,\n  CRow,\n  CModalBody,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CForm,\n  CInput,\n  CInvalidFeedback,\n  CFormGroup,\n  CModalFooter,\n  CSelect,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport config, { mappingUserType } from '../../../config';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { capitalizeWords, formatDate, validate } from '../../../utils';\nimport { DatePicker } from '../../../components';\nimport FieldName from '../containers/FieldName';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    first_name: Yup.string().trim().required('first-name-must-be-at-least-1'),\n    last_name: Yup.string().trim().required('last-name-must-be-at-least-1-c'),\n  });\n};\n\ninterface Props {\n  searchUsers: () => void;\n  handleClose: () => void;\n  show: boolean;\n  initialValues: any;\n  type: string;\n}\n\nconst ModalUpdateUser: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const { searchUsers, handleClose, show, initialValues, type } = props;\n\n  const [birthDate, setBirthDate] = useState<any>(null);\n\n  useEffect(() => {\n    if (!show) return;\n    setBirthDate(initialValues.birth_date);\n  }, [show]);\n\n  const onSubmit = (values: {\n    id: string;\n    first_name: string;\n    last_name: string;\n    status_id: string;\n    email: string;\n    gender: string;\n  }) => {\n    const body = {\n      first_name: values.first_name.trim(),\n      last_name: values.last_name.trim(),\n      email: values.email,\n      status_id: Number(values.status_id),\n      gender: Number(values.gender),\n      birth_date: formatDate(birthDate),\n    };\n    callApi(\n      {\n        method: 'put',\n        api: `/api/v1/admin/users/${mappingUserType[type]}/${values.id}`,\n        body: body,\n        loading: true,\n        msg: config.messages.createUserFailure,\n      },\n      (response) => {\n        const { status } = response;\n        if (status === SUCCESS) {\n          searchUsers();\n          handleClose();\n        }\n      },\n    );\n  };\n\n  const [attention, setAttention] = useState(false);\n  const formRef = useRef<any>(null);\n\n  const newHandleClose = () => {\n    formRef.current.resetForm();\n    props.handleClose();\n    setAttention(false);\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty && birthDate === initialValues.birth_date) {\n      newHandleClose();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <div className=\"flex-row align-items-center\">\n      <CModal centered show={show} onClose={newHandleClose} closeOnBackdrop={false}>\n        <CModalHeader>\n          Edit Account\n          <i className=\"fa fa-close cursor-pointer\" onClick={showAttention} />\n        </CModalHeader>\n        <CModalBody className=\"popup--update-user\">\n          <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n            <CModalBody style={{ textAlign: 'center' }}>Are you sure you want to discard your changes?</CModalBody>\n            <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n              <button className=\"btn btn-danger\" style={{ width: 160 }} color=\"danger\" onClick={newHandleClose}>\n                Discard\n              </button>\n              <button style={{ width: 160 }} className=\"btn btn-primary\" onClick={() => setAttention(false)}>\n                Keep Editing\n              </button>\n            </CModalFooter>\n          </CModal>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"12\">\n              <CCardGroup>\n                <CCard className=\"popup--update-user__card--wrapper\">\n                  <CCardBody>\n                    <Formik\n                      innerRef={formRef}\n                      enableReinitialize={true}\n                      initialValues={initialValues}\n                      validate={validate(validationSchema)}\n                      onSubmit={onSubmit}\n                    >\n                      {({ values, errors, touched, dirty, handleChange, handleBlur, handleSubmit, isValid }) => (\n                        <CForm onSubmit={handleSubmit}>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"First Name\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('first-name')}\n                                invalid={values.first_name.trim() !== '' && touched.first_name && !!errors.first_name}\n                                autoComplete=\"first_name\"\n                                maxLength={50}\n                                value={capitalizeWords(values.first_name)}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                                }}\n                                name=\"first_name\"\n                              />\n                              <CInvalidFeedback>{t(errors.first_name || '')}</CInvalidFeedback>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Last Name\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('last-name')}\n                                invalid={values.last_name.trim() !== '' && touched.last_name && !!errors.last_name}\n                                autoComplete=\"last_name\"\n                                maxLength={50}\n                                value={capitalizeWords(values.last_name)}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (config.validate.valueTypingExpressionsName(e)) handleChange(e);\n                                }}\n                                name=\"last_name\"\n                              />\n                              <CInvalidFeedback>{t(errors.last_name || '')}</CInvalidFeedback>\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-4\">\n                            <FieldName label=\"Email\" width={110}>\n                              <CInput\n                                type=\"text\"\n                                placeholder={t('email')}\n                                invalid={values.email !== '' && touched.email && !!errors.email}\n                                autoComplete=\"email\"\n                                maxLength={50}\n                                value={values.email}\n                                onBlur={handleBlur}\n                                onChange={(e: any) => {\n                                  if (!e.target.value.includes(' ')) handleChange(e);\n                                }}\n                                name=\"email\"\n                                disabled\n                              />\n                            </FieldName>\n                          </CFormGroup>\n                          <CFormGroup className=\"mb-3\">\n                            <FieldName label=\"Gender\" width={110}>\n                              <div className=\"d-flex\">\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"0\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '0'}\n                                />\n                                Male\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"1\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '1'}\n                                />\n                                Female\n                                <CInput\n                                  type=\"radio\"\n                                  name=\"gender\"\n                                  value=\"2\"\n                                  onChange={handleChange}\n                                  checked={values.gender === '2'}\n                                />\n                                Other\n                              </div>\n                            </FieldName>\n                          </CFormGroup>\n                          <div className=\"mb-3\">\n                            <FieldName label=\"Date Of Birth\" width={110}>\n                              <DatePicker date={birthDate} setDate={setBirthDate} fullWidth />\n                            </FieldName>\n                          </div>\n                          {type !== 'nurse' && (\n                            <CFormGroup>\n                              <FieldName label=\"Status\" width={110}>\n                                <CSelect value={values.status_id} onChange={handleChange} name=\"status_id\">\n                                  <option value={3}>Approved</option>\n                                  <option value={2}>Disapproved</option>\n                                </CSelect>\n                              </FieldName>\n                            </CFormGroup>\n                          )}\n                          <div style={{ textAlign: 'right' }}>\n                            <CButton\n                              color=\"primary\"\n                              className=\"px-4\"\n                              type=\"submit\"\n                              disabled={\n                                !isValid ||\n                                !birthDate ||\n                                !['0', '1', '2'].includes(values.gender) ||\n                                (!dirty && birthDate === initialValues.birth_date)\n                              }\n                            >\n                              {t('update')}\n                            </CButton>\n                          </div>\n                        </CForm>\n                      )}\n                    </Formik>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default ModalUpdateUser;\n","import React from 'react';\nimport { CModal, CCol, CModalHeader, CRow, CModalBody, CModalFooter, CButton } from '@coreui/react';\nimport { callApiAction } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\ninterface Props {\n  show: boolean;\n  email: string;\n  userId: string;\n  handleClose: () => void;\n}\n\nconst PopupResetPassword: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const { show, email, userId, handleClose } = props;\n\n  const confirm = () => {\n    props.handleClose();\n\n    callApi({\n      method: 'get',\n      api: config.rest.resetPassword(userId),\n      msg: config.messages.resetPasswordFailure,\n    });\n  };\n\n  return (\n    <CModal centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader>{t('reset-password-confirmation')}</CModalHeader>\n      <CModalBody>\n        {t('do-you-want-to-reset-password')} {email} {t('admin')}?\n      </CModalBody>\n      <CModalFooter>\n        <CRow>\n          <CCol>\n            <CButton color=\"danger\" className=\"px-4\" onClick={handleClose}>\n              {t('no')}\n            </CButton>\n          </CCol>\n          <CCol>\n            <CButton color=\"info\" className=\"px-4\" onClick={confirm}>\n              {t('yes')}\n            </CButton>\n          </CCol>\n        </CRow>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default PopupResetPassword;\n","import React from 'react';\n\ninterface Props {\n  show: boolean;\n  handleClose: () => void;\n  url: string;\n  name: string;\n}\n\nconst ModalViewImage: React.FC<Props> = (props) => {\n  const { show, handleClose, url, name } = props;\n\n  const splitItems = url?.split?.('.');\n  const isIframe = splitItems?.[splitItems.length - 1] === 'pdf';\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        position: 'fixed',\n        display: show ? 'flex' : 'none',\n        zIndex: 100,\n        top: 0,\n        left: 0,\n        background: '#1b2638',\n        flexDirection: 'column',\n        alignItems: 'center',\n        overflow: 'auto',\n      }}\n    >\n      <div style={{ height: 60 }}>\n        <div\n          className=\"d-flex justify-content-between p-3\"\n          style={{ width: '100vw', color: '#afc0dc', fontSize: 16, position: 'fixed', top: 0, left: 0 }}\n        >\n          <div>{name}</div>\n          <div className=\"modal-view-image-close-btn\" onClick={handleClose}>\n            <i className=\"fas fa-times\" style={{ color: '#9fb0cc', fontSize: 20 }} />\n          </div>\n        </div>\n      </div>\n      {isIframe ? (\n        <div style={{ height: '90vh', display: 'flex', alignItems: 'center', width: '95vw' }}>\n          <iframe\n            key={url}\n            title={name}\n            width=\"100%\"\n            height=\"100%\"\n            style={{ border: 'solid 1px gray', textAlign: 'center' }}\n            src={url}\n          />\n        </div>\n      ) : (\n        <div style={{ height: '90vh', display: 'flex', alignItems: 'center' }}>\n          <div\n            style={{\n              width: 1000,\n              minHeight: 500,\n              background: 'white',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <img src={url || 'https://i.imgur.com/hGefqAz.jpg'} alt={name} style={{ maxWidth: 1000, maxHeight: 640 }} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ModalViewImage;\n","import React, { useEffect, useState } from 'react';\nimport { CModal, CModalHeader, CModalBody } from '@coreui/react';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useDispatch } from 'react-redux';\nimport { loadingSmall } from '../../../extensions';\nimport moment from 'moment';\nimport './ModalViewDocuments.css';\nimport ModalViewImage from './ModalViewImage';\nimport { Document, Page } from 'react-pdf';\n\ninterface Props {\n  show: boolean;\n  handleClose: () => void;\n  id: string;\n  userStatus: number;\n  userEmail: string;\n  getUsers: any;\n  modalSendEmail: any;\n  setModalSendEmail: any;\n}\n\ntype File = {\n  type: string;\n  file_name: string;\n  link: string;\n  key: string;\n};\n\ntype Documents = {\n  signature: string;\n  card_number: string;\n  image_back: string;\n  card_expires: number;\n  image_front: string;\n  card_location: string;\n  gender: string;\n  last_name: string;\n  first_name: string;\n  date_of_birth: string;\n  files_professional: File[];\n  files_consultation: File[];\n  loading: boolean;\n};\n\nconst defaultValue = {\n  signature: '',\n  card_number: '',\n  image_back: '',\n  card_expires: 0,\n  image_front: '',\n  card_location: '',\n  gender: '',\n  last_name: '',\n  first_name: '',\n  date_of_birth: '',\n  files_professional: [],\n  files_consultation: [],\n  loading: false,\n};\n\nconst renderImg = (url: string) => {\n  const splitItems = url?.split?.('.');\n\n  if (splitItems[splitItems.length - 1] === 'pdf')\n    return (\n      <Document file={url}>\n        <Page pageNumber={1} height={240} />\n      </Document>\n    );\n\n  return <img src={url} alt=\"document\" style={{ objectFit: 'contain' }} />;\n};\n\nconst ModalViewDocuments: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const { show, handleClose, id, userStatus, modalSendEmail, getUsers, setModalSendEmail } = props;\n\n  const [documents, setDocuments] = useState<Documents>(defaultValue);\n  const [modalViewImage, setModalViewImage] = useState({ show: false, url: '', name: '' });\n\n  useEffect(() => {\n    if (!show || !id) return;\n    setDocuments({ ...documents, loading: true });\n    callApi({ method: 'get', api: `/api/v1/admin/users/nurse/${id}/documents-profile` }, ({ status, data }) => {\n      if (status === SUCCESS) {\n        setDocuments({ ...data, loading: false });\n      } else {\n        setDocuments(defaultValue);\n      }\n    });\n  }, [id]);\n\n  const approval = (isApproved: boolean) => {\n    callApi(\n      {\n        method: 'put',\n        api: `/api/v1/admin/users/nurse/${id}/documents-profile`,\n        body: { approval: isApproved },\n        loading: true,\n      },\n      ({ status }) => {\n        if (status === SUCCESS) {\n          handleClose();\n          getUsers();\n        }\n      },\n    );\n  };\n\n  let render = loadingSmall;\n  if (!documents.loading) {\n    render = (\n      <div>\n        <div className=\"modal-view-documents-title\">Name: {documents.first_name + ' ' + documents.last_name}</div>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <div className=\"modal-view-documents-title mt-3\">I. Identification Information</div>\n            <div className=\"modal-view-documents-children mb-3\">\n              <div className=\"mt-1\">ID number: {documents.card_number}</div>\n              <div className=\"mt-1\">Expires on: {moment(documents.card_expires * 1000).format('DD-MM-YYYY')}</div>\n              <div className=\"mt-1\">Location: {documents.card_location}</div>\n            </div>\n            <div className=\"modal-view-documents-title mt-3\">II. Certificate</div>\n            <div className=\"modal-view-documents-children\">\n              {documents.files_professional?.map((item) => (\n                <div\n                  style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n                  className=\"link mt-1\"\n                  onClick={() =>\n                    setModalViewImage({\n                      show: true,\n                      url: item.link,\n                      name: item.file_name,\n                    })\n                  }\n                >\n                  &bull; {item.file_name}\n                </div>\n              ))}\n              {documents.files_consultation?.map((item) => (\n                <div\n                  style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n                  className=\"link mt-1\"\n                  onClick={() =>\n                    setModalViewImage({\n                      show: true,\n                      url: item.link,\n                      name: item.file_name,\n                    })\n                  }\n                >\n                  &bull; {item.file_name}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-8\">\n            <div className=\"d-flex justify-content-evenly\">\n              <div\n                className=\"cursor-pointer p-3\"\n                onClick={() => setModalViewImage({ show: true, url: documents.image_front, name: 'Front Card' })}\n                style={{ width: '50%', height: 240, display: 'flex', justifyContent: 'center' }}\n              >\n                {renderImg(documents.image_front || 'https://i.imgur.com/hGefqAz.jpg')}\n              </div>\n              <div\n                className=\"cursor-pointer p-3\"\n                onClick={() => setModalViewImage({ show: true, url: documents.image_back, name: 'Back Card' })}\n                style={{ width: '50%', height: 240, display: 'flex', justifyContent: 'center' }}\n              >\n                {renderImg(documents.image_back || 'https://i.imgur.com/hGefqAz.jpg')}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3\">\n          <div className=\"modal-view-documents-title mt-3\">III. E-Signature</div>\n          <div className=\"d-flex justify-content-center\">\n            <img\n              className=\"cursor-pointer\"\n              onClick={() =>\n                setModalViewImage({\n                  show: true,\n                  url: documents.signature,\n                  name: 'E-Signature',\n                })\n              }\n              src={documents.signature || 'https://i.imgur.com/hGefqAz.jpg'}\n              style={{ width: 480, height: 250 }}\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-end\">\n          <button className=\"btn btn-primary mr-3\" onClick={() => setModalSendEmail({ show: true })}>\n            Send email\n          </button>\n          <button className=\"btn btn-primary mr-3\" onClick={() => approval(false)} disabled={userStatus === 2}>\n            Disapproved\n          </button>\n          <button className=\"btn btn-primary\" onClick={() => approval(true)} disabled={userStatus === 3}>\n            Approved\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={modalSendEmail.show ? 'hb-modal-hidden' : ''}>\n      <CModal size=\"xl\" centered show={show} onClosed={handleClose} onClose={handleClose} closeOnBackdrop={false}>\n        <CModalHeader closeButton>Nurse Infomation</CModalHeader>\n        <CModalBody>\n          <ModalViewImage\n            {...modalViewImage}\n            handleClose={() => setModalViewImage({ ...modalViewImage, show: false })}\n          />\n          {render}\n        </CModalBody>\n      </CModal>\n    </div>\n  );\n};\n\nexport default ModalViewDocuments;\n","import React, { useEffect, useState } from 'react';\nimport { CModal, CModalHeader, CModalBody } from '@coreui/react';\nimport { SUCCESS } from '../../../store/callApi/actions';\n\ninterface Props {\n  show: boolean;\n  handleClose: () => void;\n  handleCloseParent: () => void;\n  popupViewDocuments: any;\n  callApi: any;\n}\n\nconst ModalSendEmail: React.FC<Props> = (props) => {\n  const { show, handleClose, popupViewDocuments, handleCloseParent, callApi } = props;\n\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    if (!show) return;\n    setContent('');\n  }, [show]);\n\n  const send = () => {\n    callApi(\n      {\n        method: 'post',\n        api: `/api/v1/admin/users/nurse/${popupViewDocuments.id}/re-upload-email`,\n        loading: true,\n        body: { data: content },\n      },\n      ({ status }: any) => {\n        if (status === SUCCESS) {\n          handleClose();\n          handleCloseParent();\n        }\n      },\n    );\n  };\n\n  return (\n    <CModal\n      style={{ borderRadius: 10 }}\n      size=\"lg\"\n      centered\n      show={show}\n      onClosed={handleClose}\n      onClose={handleClose}\n      closeOnBackdrop={false}\n    >\n      <CModalHeader closeButton>To: {popupViewDocuments.userEmail}</CModalHeader>\n      <CModalBody className=\"px-4 pt-3\" style={{ textAlign: 'right' }}>\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          className=\"form-control\"\n          rows={12}\n          placeholder=\"Email content ...\"\n        />\n        <button className=\"btn btn-primary px-4 mt-3\" onClick={send} disabled={content.trim() === ''}>\n          Send\n        </button>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default ModalSendEmail;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CBadge, CDataTable, CPagination, CButton, CInput } from '@coreui/react';\nimport { statuses, mappingGender, mappingUserType, listUserStatus } from '../../../config';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalCreateUser from './ModalCreateUser';\nimport ModalUpdateUser from './ModalUpdateUser';\nimport PopupResetPassword from './PopupResetPassword';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { useTranslation } from 'react-i18next';\nimport ModalViewDocuments from './ModalViewDocuments';\nimport { SelectLoadmore, StarRatingFloating } from '../../../components';\nimport Feedbacks from '../../user/consulting/Feedbacks';\nimport ModalSendEmail from './ModalSendEmail';\nimport { createDate, formatDate } from '../../../utils';\nimport './Users.scss';\nimport { pagination } from '../../../extensions';\n\nconst fieldsNurse = [\n  { key: 'no', _style: { width: '3%' } },\n  { key: 'first_name', _classes: 'font-weight-bold', _style: { width: '12%' } },\n  { key: 'last_name', _classes: 'font-weight-bold', _style: { width: '12%' } },\n  { key: 'email', _style: { width: '17%' } },\n  { key: 'gender', _style: { width: '8%' } },\n  { key: 'birth_date', _style: { width: '10%' }, label: 'Date Of Birth' },\n  { key: 'feed_back', _style: { width: '10%' }, label: 'Feedback' },\n  { key: 'verify_email', _style: { width: '10%' } },\n  { key: 'status_id', label: 'Status', _style: { width: '8%' } },\n  { key: 'action', _style: { width: '10%' } },\n];\n\nconst fieldsOther = [\n  { key: 'no', _style: { width: '4%' } },\n  { key: 'first_name', _classes: 'font-weight-bold', _style: { width: '15%' } },\n  { key: 'last_name', _classes: 'font-weight-bold', _style: { width: '15%' } },\n  { key: 'email', _style: { width: '18%' } },\n  { key: 'gender', _style: { width: '8%' } },\n  { key: 'birth_date', label: 'Date Of Birth', _style: { width: '10%' } },\n  { key: 'verify_email', _style: { width: '10%' } },\n  { key: 'status_id', label: 'Status', _style: { width: '8%' } },\n  { key: 'action', _style: { width: '8%' } },\n];\n\nconst initialValuesCreate = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n  status_id: 3,\n};\n\nconst initialValuesUpdate = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  status_id: 3,\n  gender: '3',\n  birth_date: null,\n};\n\nconst pageSize = 10;\n\nconst Users: React.FC<RouteComponentProps> = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const auth = useSelector((state: any) => state.auth);\n  const isAdmin = auth.group_name === 'admin';\n\n  const query = new URLSearchParams(props.location?.search);\n\n  let paramType = query.get('type') || 'admin';\n  let paramStatus = Number(query.get('status')) || 0;\n  if (!['nurse', 'user', 'admin'].includes(paramType)) paramType = 'admin';\n  if (paramStatus < 0 || paramStatus > 4) paramStatus = 0;\n\n  const fields = paramType === 'nurse' ? fieldsNurse : fieldsOther;\n\n  const getStatus = listUserStatus.filter((item: any) => item?.id === paramStatus)?.[0] || null;\n\n  const [searchName, setSearchName] = useState('');\n  const [type, setType] = useState(paramType);\n  const [status, setStatus] = useState<any>(getStatus);\n  const [users, setUsers] = useState<any>({ data: [], loading: true, total: 0, totalPages: 0, page: 1 });\n  const [createUserData, setCreateUserData] = useState({ show: false, initialValues: initialValuesCreate });\n  const [updateUserData, setUpdateUserData] = useState({ show: false, initialValues: initialValuesUpdate });\n  const [popupResetData, setPopupResetData] = useState({ show: false, email: '', userId: '' });\n  const [popupViewDocuments, setPopupViewDocuments] = useState({ show: false, id: '', userStatus: 0, userEmail: '' });\n  const [firstTime, setFirstTime] = useState(false);\n  const [modalFeedbacks, setModalFeedbacks] = useState({\n    show: false,\n    nurseId: '',\n    nurseName: '',\n    nurseThumbnail: '',\n    nurseRating: 0.0,\n  });\n  const [modalSendEmail, setModalSendEmail] = useState({ show: false });\n  const timeout = useRef<any>(0);\n\n  const newType = mappingUserType[type];\n\n  const searchUsers = (newPage: number) => {\n    setUsers({ ...users, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: `/api/v1/admin/users/${newType}?status=${\n          status ? status.id : ''\n        }&page_size=${pageSize}&page_number=${newPage}&search_name=${searchName}`,\n      },\n      (response) => {\n        const { data } = response;\n        const status1 = response.status;\n        if (status1 === SUCCESS) {\n          setUsers({\n            data: data.users.map((user: any, index: number) => {\n              return { ...user, no: index + 1 + pageSize * (newPage - 1), birth_date: createDate(user.birth_date) };\n            }),\n            loading: false,\n            total: data.total,\n            totalPages: Math.ceil(data.total / pageSize),\n            page: newPage,\n          });\n        } else setUsers({ ...users, loading: false });\n      },\n    );\n  };\n\n  useEffect(() => {\n    setType(paramType);\n    if (paramType !== 'nurse') setStatus(null);\n    setUsers({ ...users, loading: true, data: [], total: 0, totalPages: 0 });\n  }, [paramType]);\n\n  useEffect(() => {\n    setStatus(getStatus);\n  }, [paramStatus]);\n\n  useEffect(() => {\n    if (firstTime) {\n      if (timeout.current) clearTimeout(timeout.current);\n      timeout.current = setTimeout(() => {\n        searchUsers(1);\n      }, 1000);\n    }\n    setFirstTime(true);\n  }, [searchName]);\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === 'Enter') {\n      searchUsers(1);\n    }\n  };\n\n  const pageChange = (newPage: number) => {\n    if (users.page !== newPage) {\n      searchUsers(newPage);\n    }\n  };\n\n  useEffect(() => {\n    searchUsers(1);\n  }, [status, type]);\n\n  let noItems = <div />;\n\n  if (!users.loading) {\n    if (!users.total) noItems = <div>{t('no-items-found')}</div>;\n  }\n\n  const handleShowDocuments = (item: any) => {\n    setPopupViewDocuments({ show: true, id: item.id, userStatus: item.status, userEmail: item.email });\n  };\n\n  const handleCloseDocuments = () => {\n    setPopupViewDocuments({ ...popupViewDocuments, show: false });\n  };\n\n  return (\n    <div style={{ width: '90%', margin: '10px auto' }}>\n      <Feedbacks {...modalFeedbacks} handleClose={() => setModalFeedbacks({ ...modalFeedbacks, show: false })} />\n      <ModalCreateUser\n        initialValues={createUserData.initialValues}\n        show={createUserData.show}\n        handleClose={() => setCreateUserData({ show: false, initialValues: initialValuesCreate })}\n        searchUsers={() => searchUsers(1)}\n      />\n      <ModalUpdateUser\n        type={type}\n        initialValues={updateUserData.initialValues}\n        show={updateUserData.show}\n        handleClose={() => setUpdateUserData({ show: false, initialValues: initialValuesUpdate })}\n        searchUsers={() => searchUsers(1)}\n      />\n      <PopupResetPassword\n        show={popupResetData.show}\n        handleClose={() => setPopupResetData({ show: false, email: '', userId: '' })}\n        email={popupResetData.email}\n        userId={popupResetData.userId}\n      />\n      <ModalViewDocuments\n        modalSendEmail={modalSendEmail}\n        {...popupViewDocuments}\n        setModalSendEmail={setModalSendEmail}\n        handleClose={handleCloseDocuments}\n        getUsers={searchUsers}\n      />\n      <ModalSendEmail\n        callApi={callApi}\n        {...modalSendEmail}\n        popupViewDocuments={popupViewDocuments}\n        handleClose={() => setModalSendEmail({ ...modalSendEmail, show: false })}\n        handleCloseParent={handleCloseDocuments}\n      />\n      <div>\n        <h3>\n          {type === 'admin'\n            ? 'Admin Management'\n            : type === 'nurse'\n            ? `Nurse ${status === 1 ? '- Pending Approval' : 'Management'}`\n            : 'Basic Member Management'}\n        </h3>\n        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 20, marginBottom: 30 }}>\n          <div style={{ position: 'relative', width: 218, height: 35 }}>\n            <CInput\n              className=\"mr-3\"\n              style={{ width: 218, position: 'absolute', paddingLeft: 32 }}\n              type=\"text\"\n              placeholder={t('search')}\n              value={searchName}\n              maxLength={50}\n              onChange={(e: any) => setSearchName(e.target.value)}\n              onKeyDown={handleKeyDown}\n            />\n            <i style={{ position: 'absolute', left: 10, top: 11, color: '#777' }} className=\"fa fa-search icon\"></i>\n          </div>\n          {!paramStatus && (\n            <div style={{ width: 250 }}>\n              <SelectLoadmore\n                className=\"mx-3\"\n                selected={status}\n                setSelected={setStatus}\n                defaultValue=\"Select status\"\n                data={\n                  paramType === 'nurse'\n                    ? listUserStatus\n                    : listUserStatus.filter((item) => item?.id !== 1 && item?.id !== 4)\n                }\n                loading={false}\n                full={true}\n                value={status ? status.name : ''}\n              />\n            </div>\n          )}\n          {!isAdmin && paramType === 'admin' && (\n            <div style={{ textAlign: 'right', flex: 1 }}>\n              <CButton\n                color=\"primary\"\n                onClick={() =>\n                  setCreateUserData({\n                    show: true,\n                    initialValues: {\n                      first_name: '',\n                      last_name: '',\n                      email: '',\n                      password: '',\n                      status_id: 3,\n                    },\n                  })\n                }\n              >\n                {t('add-new-user')}\n              </CButton>\n            </div>\n          )}\n        </div>\n      </div>\n      <div>\n        <CDataTable\n          items={users.data}\n          fields={fields}\n          loading={users.loading}\n          noItemsViewSlot={noItems}\n          hover\n          striped\n          scopedSlots={{\n            no: (item: any) => <td className=\"align-middle\">{item.no}</td>,\n            first_name: (item: any) => (\n              <td className=\"align-middle\" style={{ textAlign: 'left', height: 60 }}>\n                {item.first_name}\n              </td>\n            ),\n            last_name: (item: any) => (\n              <td className=\"align-middle\" style={{ textAlign: 'left' }}>\n                {item.last_name}\n              </td>\n            ),\n            email: (item: any) => (\n              <td className=\"align-middle\" style={{ textAlign: 'left' }}>\n                {item.email}\n              </td>\n            ),\n            gender: (item: any) => <td className=\"align-middle\">{mappingGender[item.gender]}</td>,\n            birth_date: (item: any) => (\n              <td className=\"align-middle\">\n                {item.birth_date ? formatDate(item.birth_date) : <div style={{ marginLeft: '25%' }}>-</div>}\n              </td>\n            ),\n            feed_back: (item: any) => (\n              <td className=\"align-middle\">\n                {item.feed_back ? (\n                  <div>\n                    <StarRatingFloating rating={item.feed_back} size=\"sm\" />\n                    <div\n                      className=\"link\"\n                      style={{ fontSize: 12 }}\n                      onClick={() =>\n                        setModalFeedbacks({\n                          show: true,\n                          nurseId: item.id,\n                          nurseName: item.first_name + ' ' + item.last_name,\n                          nurseThumbnail: '',\n                          nurseRating: item.feed_back,\n                        })\n                      }\n                    >\n                      View detail\n                    </div>\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: '25%' }}>-</div>\n                )}\n              </td>\n            ),\n            verify_email: (item: any) => <td className=\"align-middle\">{item.verify_email}</td>,\n            status_id: (item: any) => (\n              <td className=\"align-middle\">\n                <div className=\"d-flex align-items-center\">\n                  <CBadge className=\"status--style--data--table\">{statuses[item.status_id]}</CBadge>\n                  <div\n                    style={{\n                      width: '100%',\n                      textAlign: 'right',\n                      fontSize: 15,\n                      visibility: paramType === 'nurse' && item.status_id !== 4 ? 'visible' : 'hidden',\n                      cursor: 'pointer',\n                    }}\n                    onClick={() => handleShowDocuments(item)}\n                  >\n                    <i className=\"fas fa-caret-square-down\" />\n                  </div>\n                </div>\n              </td>\n            ),\n            action: (item: any) => (\n              <td className=\"py-2 align-middle\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  style={{\n                    marginRight: 10,\n                    visibility: isAdmin || item.type !== 'admin' ? 'hidden' : 'visible',\n                  }}\n                  onClick={() => setPopupResetData({ show: true, email: item.email, userId: item.id })}\n                >\n                  <i className=\"fas fa-sync-alt\"> </i>\n                </CButton>\n                <CButton\n                  disabled={item.verify_email === 'Inactive'}\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={() => {\n                    setUpdateUserData({ show: true, initialValues: item });\n                  }}\n                >\n                  <i className=\"fas fa-pencil-alt\"> </i>\n                </CButton>\n              </td>\n            ),\n          }}\n        />\n      </div>\n      {pagination(users.totalPages, users.page, pageChange, users.total)}\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  centered?: boolean;\n  label: string;\n  width?: number;\n  style?: any;\n}\n\nconst FieldName: React.FC<Props> = (props) => {\n  let { className, label, children, width, centered, style } = props;\n  width = width || 110;\n\n  return (\n    <div className={`d-flex mb-3 ${centered ? 'align-items-center' : ''} ${className || ''}`} style={style}>\n      <div style={{ minWidth: width, marginTop: 6 }}>{label}</div>\n      <div style={{ width: `calc(100% - ${width}px)` }}>{children}</div>\n    </div>\n  );\n};\n\nexport default FieldName;\n","import React, { useEffect, useState } from 'react';\nimport { CModal, CModalBody, CModalHeader } from '@coreui/react';\nimport { StarRatingStatic, StarRatingFloating } from '../../../components';\nimport moment from 'moment';\nimport './Feedbacks.css';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { defaultAvatar, loadingSmall } from '../../../extensions';\n\nconst ratingTypes = [0, 5, 4, 3, 2, 1];\n\ntype FeedbackType = {\n  user_id: string;\n  avatar: string;\n  first_name: string;\n  last_name: string;\n  feedback: number;\n  customer_comments: string;\n  modified_date: number;\n};\n\ninterface Props {\n  show: boolean;\n  nurseId: string;\n  nurseName: string;\n  nurseThumbnail: string;\n  nurseRating: number;\n  handleClose: any;\n}\n\nconst Feedbacks: React.FC<Props> = (props) => {\n  const { show, nurseId, nurseName, nurseThumbnail, nurseRating, handleClose } = props;\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const [feedbacks, setFeedbacks] = useState<{\n    data: {\n      rating: number;\n      number_feedback: number;\n      user_comments: FeedbackType[];\n    }[];\n    loading: boolean;\n    full: boolean;\n    page: number;\n  }>({\n    data: [],\n    loading: true,\n    full: true,\n    page: 1,\n  });\n\n  const [currentRating, setCurrentRating] = useState(0);\n\n  useEffect(() => {\n    if (!show) return;\n    setCurrentRating(0);\n\n    setFeedbacks({ ...feedbacks, loading: true });\n    callApi({ method: 'get', api: config.rest.getDetailFeedbacks(nurseId, 1) }, ({ status, data }: any) => {\n      if (status === SUCCESS) {\n        setFeedbacks((feedbacks: any) => {\n          return { data, loading: false, full: true, page: 1 };\n        });\n      }\n    });\n  }, [nurseId]);\n\n  const renderRatingSelect = (ratingType: number) => {\n    let renderStars;\n    if (ratingType === 0) renderStars = <span>All</span>;\n    else renderStars = Array.from({ length: ratingType }).map((_, index) => <i key={index} className=\"fa fa-star\" />);\n    return (\n      <div key={ratingType} onClick={() => setCurrentRating(ratingType)} className=\"col-md-2\">\n        <div\n          className={`rating-select ${ratingType === currentRating ? 'active' : ''}`}\n          style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}\n        >\n          <div>{renderStars}</div>\n          <div>({feedbacks.data[ratingType].number_feedback})</div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFeedback = (feedbackItem: FeedbackType) => {\n    const { user_id, avatar, first_name, last_name, feedback, customer_comments, modified_date } = feedbackItem;\n    return (\n      <div key={user_id} className=\"feedback-wrapper\">\n        <div className=\"mx-3\">\n          <img alt=\"user-avatar\" src={avatar || defaultAvatar} className=\"user-avatar\" />\n        </div>\n        <div>\n          <div className=\"feedback-username\">{first_name + ' ' + last_name}</div>\n          <StarRatingStatic size=\"sm\" rating={feedback} />\n          <div className=\"feedback-content\">{customer_comments}</div>\n          <div className=\"feedback-created-date\">{moment(modified_date * 1000).format('DD.MM.YYYY hh:mm')}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <CModal size=\"xl\" style={{ height: '90vh' }} centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader closeButton>Feedbacks</CModalHeader>\n      <CModalBody className=\"px-0 py-3\" style={{ overflowY: 'auto', overflowX: 'hidden' }}>\n        <div className=\"p-5 nurse-wrapper\">\n          <div className=\"text-center\">\n            <img\n              alt=\"nurse-avatar\"\n              src={nurseThumbnail || defaultAvatar}\n              className=\"nurse-avatar\"\n            />\n            <div className=\"nurse-name\">{nurseName}</div>\n          </div>\n          <div className=\"text-center\">\n            <span className=\"rating-wrapper\">\n              <span className=\"rating\">{Number(nurseRating)?.toFixed(1)}</span>\n              <span className=\"max-rating\">/5.0</span>\n            </span>\n            <StarRatingFloating size=\"lg\" rating={nurseRating} />\n          </div>\n        </div>\n        {feedbacks.loading ? (\n          <div className=\"mt-5\">{loadingSmall}</div>\n        ) : (\n          <div>\n            <div className=\"row px-5 py-3\">{ratingTypes.map((item) => renderRatingSelect(item))}</div>\n            <div>{feedbacks.data[currentRating].user_comments.map((item) => renderFeedback(item))}</div>\n            {feedbacks.data[currentRating].user_comments.length === 0 && (\n              <div className=\"mt-5\" style={{ textAlign: 'center', fontSize: 20 }}>\n                There is no feedback yet\n              </div>\n            )}\n          </div>\n        )}\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default Feedbacks;\n"],"sourceRoot":""}