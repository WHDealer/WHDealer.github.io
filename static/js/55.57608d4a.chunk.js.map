{"version":3,"sources":["views/user/mobility/MobilitySearch.tsx","views/user/mobility/MobilitySearch.module.scss"],"names":["MobilitySearch","dispatch","useDispatch","callApi","payload","callback","callApiAction","history","useHistory","useState","searchName","setSearchName","searchSuggestionNames","setSearchSuggestionNames","searchRef","useRef","showModal","setShowModal","removeKeyword","keywordId","filter","item","id","loading","method","api","config","rest","removeSearchHistoryKeyword","removeAllSearchHistoryKeywords","response","startSearch","push","keyword","searchParams","innerRef","clearBtn","handleEnter","useEffect","current","focus","getHistoriesKeywords","data","status","SUCCESS","map","toLowerCase","showClear","length","show","handleClose","title","content","up","down","upCallback","downCallback","className","onClick","styles","searchArea","placeholder","style","visibility","listSuggestItems","lower","arr","includes","index","fullKeywords","split","forEach","item1","whiteSpace","color","splice","suggestItemWrapper","border","suggestItemContent","circle","size","icon","e","iconStyle","fontWeight","showSuggestionName","module","exports"],"mappings":"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","file":"static/js/55.57608d4a.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport config from '../../../config';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { HBButtonIcon, HBButtonSmall, HBModalConfirm, HBSearch } from '../../../hbBaseClass';\nimport styles from './MobilitySearch.module.scss';\n\nconst MobilitySearch: React.FC<RouteComponentProps> = () => {\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n\n  const history = useHistory();\n  const [searchName, setSearchName] = useState('');\n  const [searchSuggestionNames, setSearchSuggestionNames] = useState<any[]>([]);\n  const searchRef = useRef<any>(null);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const removeKeyword = (keywordId?: any) => {\n    if (keywordId) {\n      setSearchSuggestionNames(searchSuggestionNames.filter((item: any) => item.id !== keywordId));\n    } else {\n      setSearchSuggestionNames([]);\n    }\n    callApi(\n      {\n        loading: false,\n        method: 'delete',\n        api: keywordId\n          ? config.rest.removeSearchHistoryKeyword(keywordId)\n          : config.rest.removeAllSearchHistoryKeywords(),\n      },\n      (response) => {},\n    );\n  };\n\n  const startSearch = (item: { id: string; keyword: string }) => {\n    history.push(`/mobility?search=${item.keyword}`);\n  };\n\n  const showSuggestionName = () => {\n    const lower = searchName.toLowerCase();\n    const arr = searchSuggestionNames.filter((item) => item.keyword.includes(lower));\n    if (arr.length === 0) return <div className=\"search-group-item disabled\">-</div>;\n    return arr.map((item: { id: string; keyword: string }, index: number) => {\n      let splitKeywords;\n      let fullKeywords: any = [];\n      if (lower) {\n        splitKeywords = item.keyword.split(lower);\n        splitKeywords.forEach((item1) => {\n          fullKeywords.push(<span style={{ whiteSpace: 'pre' }}>{item1}</span>);\n          fullKeywords.push(<span style={{ whiteSpace: 'pre', color: 'var(--violet-80)' }}>{lower}</span>);\n        });\n        fullKeywords.splice(fullKeywords.length - 1, 1);\n      }\n      return (\n        <div\n          className={`search-group-item d-flex align-items-center justify-content-between ${styles.suggestItemWrapper}`}\n          style={index === arr.length - 1 ? { border: 'none' } : {}}\n          key={item.id}\n        >\n          <div className={`d-flex align-items-center ${styles.suggestItemContent}`} onClick={() => startSearch(item)}>\n            <i className=\"hb-icon-zoom-in hb-select-category-icon-search\" />\n            {fullKeywords.length > 0 ? fullKeywords : item.keyword}\n          </div>\n          <HBButtonIcon\n            circle={{ color: '#d3d4d5', size: 24 }}\n            icon=\"cross\"\n            size={18}\n            color=\"var(--violet-100)\"\n            onClick={(e: any) => removeKeyword(item.id)}\n            iconStyle={{ fontWeight: 'bold' }}\n          />\n        </div>\n      );\n    });\n  };\n\n  const searchParams = {\n    innerRef: searchRef,\n    clearBtn: true,\n    searchName,\n    setSearchName,\n    handleEnter: (keyword: string) => startSearch({ id: '', keyword }),\n  };\n\n  useEffect(() => {\n    searchRef.current.focus();\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getHistoriesKeywords(''),\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          setSearchSuggestionNames(\n            data.map((item: any) => {\n              return { ...item, keyword: item.keyword.toLowerCase() };\n            }),\n          );\n        }\n      },\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const showClear = searchSuggestionNames.length > 0 && !searchName;\n\n  return (\n    <div>\n      <HBModalConfirm\n        show={showModal}\n        handleClose={() => setShowModal(false)}\n        title=\"Suchverlauf löschen\"\n        content=\"Sind Sie sicher, dass Sie Ihren Suchverlauf vollständig löschen möchten?\"\n        up=\"Ja, löschen\"\n        down=\"Abbrechen\"\n        upCallback={() => {\n          setShowModal(false);\n          removeKeyword();\n        }}\n        downCallback={() => setShowModal(false)}\n      />\n      <div className=\"hb-mx-20\">\n        <div className=\"d-flex justify-content-end hb-my-28\">\n          <HBButtonSmall onClick={() => history.push('/mobility')}>\n            <i className=\"hb-icon-cross hb-icon-lg\" /> Schließen\n          </HBButtonSmall>\n        </div>\n      </div>\n      <div className=\"hb-card\">\n        <div\n          className={`hb-margin-30 ${styles.searchArea}`}\n          // style={{ paddingBottom: searchSuggestionNames.length > 0 ? 0 : 20 }}\n        >\n          <HBSearch {...searchParams} placeholder=\"Suchbegriff\" />\n          <div>\n            <div className=\"hb-select-category-title d-flex justify-content-between\">\n              {showClear ? 'Zuletzt gesucht' : 'Suchergebnisse'}\n              <HBButtonSmall\n                style={{ visibility: !showClear ? 'hidden' : 'visible' }}\n                onClick={() => setShowModal(true)}\n              >\n                Verlauf löschen\n              </HBButtonSmall>\n            </div>\n            <div className=\"hb-select-category-search-suggestion\">\n              <div className={`violet hb-scroll ${styles.listSuggestItems}`}>{showSuggestionName()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MobilitySearch;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"MobilitySearch_searchArea__2-eLj\",\"listSuggestItems\":\"MobilitySearch_listSuggestItems__3l84N\",\"suggestItemWrapper\":\"MobilitySearch_suggestItemWrapper__2Mf14\",\"suggestItemContent\":\"MobilitySearch_suggestItemContent__1SQkA\"};"],"sourceRoot":""}