{"version":3,"sources":["views/admin/mobility/ModalCreateCategory.tsx","views/admin/mobility/Categories.tsx","views/admin/containers/FieldName.tsx"],"names":["validationSchema","values","Yup","shape","title","trim","required","ModalCreateCategory","props","t","useTranslation","searchCategories","show","initialValues","callApi","formRef","useRef","useState","attention","setAttention","handleClose","current","resetForm","centered","onClose","closeOnBackdrop","className","onClick","dirty","size","style","textAlign","display","justifyContent","width","color","md","innerRef","enableReinitialize","validate","onSubmit","body","description","method","api","config","rest","adminCreateMobilityCategory","loading","status","SUCCESS","errors","touched","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","handleReset","setTouched","FieldName","label","type","placeholder","invalid","maxLength","value","onBlur","onChange","name","rows","xs","disabled","fields","key","initialValuesCreate","Categories","dispatch","useDispatch","payload","callback","callApiAction","history","useHistory","query","URLSearchParams","location","search","page","Math","max","Number","get","data","total","totalPages","categories","setCategories","createCategoryData","setCreateCategoryData","id","popupDeleteCategory","setPopupDeleteCategory","popupDeleteCategory2","setPopupDeleteCategory2","fromDate","setFromDate","toDate","setToDate","searchName","setSearchName","useEffect","getCategories","noItems","newPage","adminGetMobilityCategories","getTime","response","map","item","index","no","ceil","push","margin","isVisible","content","leftButtonText","rightButtonText","leftButtonOnPress","rightButtonOnPress","password","confirmPassword","adminDeleteMobilityCategory","handleDeleteCategory","marginBottom","Search","searchEmpty","callbackSearch","maxDate","Date","date","setDate","minDate","flex","minHeight","items","noItemsViewSlot","hover","striped","scopedSlots","length","substring","created_date","moment","format","number_of_videos","total_video","action","variant","marginRight","pagination","children","minWidth","marginTop"],"mappings":"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","file":"static/js/69.949d89bb.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  CCol,\n  CModalHeader,\n  CRow,\n  CModalBody,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInvalidFeedback,\n  CFormGroup,\n  CTextarea,\n  CModalFooter,\n} from '@coreui/react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { validate } from '../../../utils';\nimport config from '../../../config';\nimport { SUCCESS } from '../../../store/callApi/actions';\nimport { CModal } from '../../../components';\nimport FieldName from '../containers/FieldName';\n\nconst validationSchema = function (values: any) {\n  return Yup.object().shape({\n    title: Yup.string().trim().required('Category name is required'),\n  });\n};\n\ninterface Props {\n  searchCategories: () => void;\n  handleClose: () => void;\n  show: boolean;\n  initialValues: any;\n  callApi: any;\n}\n\nconst ModalCreateCategory: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n\n  const { searchCategories, show, initialValues, callApi } = props;\n  const formRef = useRef<any>(null);\n\n  const onSubmit = (values: { title: string; description: string }) => {\n    const body = {\n      title: values.title.trim(),\n      description: values.description.trim(),\n    };\n    callApi(\n      { method: 'post', api: config.rest.adminCreateMobilityCategory(), body, loading: true },\n      ({ status }: any) => {\n        if (status === SUCCESS) {\n          searchCategories();\n        }\n      },\n    );\n    handleClose();\n  };\n\n  const [attention, setAttention] = useState(false);\n\n  const handleClose = () => {\n    formRef.current.resetForm();\n    props.handleClose();\n    setAttention(false);\n  };\n\n  const showAttention = () => {\n    if (!formRef.current.dirty) {\n      handleClose();\n      return;\n    }\n    setAttention(true);\n  };\n\n  return (\n    <CModal centered show={show} onClose={handleClose} closeOnBackdrop={false}>\n      <CModalHeader>\n        New Category\n        <i className=\"fa fa-close cursor-pointer\" onClick={showAttention} />\n      </CModalHeader>\n      <CModalBody className=\"popup--update-user\">\n        <CModal size=\"sm\" show={attention} centered closeOnBackdrop={false}>\n          <CModalBody style={{ textAlign: 'center' }}>Are you sure you want to discard your changes?</CModalBody>\n          <CModalFooter style={{ display: 'flex', justifyContent: 'space-around' }}>\n            <button className=\"btn btn-danger\" style={{ width: 160 }} color=\"danger\" onClick={handleClose}>\n              Discard\n            </button>\n            <button style={{ width: 160 }} className=\"btn btn-primary\" onClick={() => setAttention(false)}>\n              Keep Editing\n            </button>\n          </CModalFooter>\n        </CModal>\n\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"12\">\n            <CCardGroup>\n              <CCard className=\"popup--update-user__card--wrapper\">\n                <CCardBody>\n                  <Formik\n                    innerRef={formRef}\n                    enableReinitialize={true}\n                    initialValues={initialValues}\n                    validate={validate(validationSchema)}\n                    onSubmit={onSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      status,\n                      dirty,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      isValid,\n                      handleReset,\n                      setTouched,\n                    }) => (\n                      <CForm onSubmit={handleSubmit}>\n                        <FieldName label=\"Title (*)\" width={100}>\n                          <CFormGroup className=\"m-0\">\n                            <CInput\n                              type=\"text\"\n                              placeholder=\"Title (*)\"\n                              invalid={values.title.trim() !== '' && touched.title && !!errors.title}\n                              maxLength={100}\n                              value={values.title}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              name=\"title\"\n                            />\n                            <CInvalidFeedback>{errors.title}</CInvalidFeedback>\n                          </CFormGroup>\n                        </FieldName>\n                        <FieldName label=\"Description\" width={100}>\n                          <CTextarea\n                            type=\"text\"\n                            placeholder=\"Description\"\n                            maxLength={1000}\n                            value={values.description}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            name=\"description\"\n                            rows={5}\n                          />\n                        </FieldName>\n                        <CFormGroup className=\"mb-0\">\n                          <CRow>\n                            <CCol xs=\"12\" style={{ textAlign: 'right' }}>\n                              <CButton color=\"secondary\" className=\"px-4 mr-4\" onClick={handleClose}>\n                                {t('cancel')}\n                              </CButton>\n                              <CButton color=\"primary\" className=\"px-4\" type=\"submit\" disabled={!(isValid && dirty)}>\n                                {t('create')}\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        </CFormGroup>\n                      </CForm>\n                    )}\n                  </Formik>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CModalBody>\n    </CModal>\n  );\n};\n\nexport default ModalCreateCategory;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { CDataTable, CPagination, CButton } from '@coreui/react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport ModalCreateCategory from './ModalCreateCategory';\nimport { ConfirmPopup, ConfirmPopupPassword, DatePicker } from '../../../components';\nimport Search from '../../../components/search/Search';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport { pagination } from '../../../extensions';\n\nconst fields = [\n  'no',\n  { key: 'title', label: 'Category name' },\n  'description',\n  'created_date',\n  { key: 'total_video', label: 'Number Of Videos' },\n  'action',\n];\n\nconst initialValuesCreate = {\n  title: '',\n  description: '',\n};\n\ntype CategoryDataType = {\n  no: number;\n  id: string;\n  title: string;\n  description: string;\n  created_date: number;\n  total_video: number;\n};\n\ntype CategoriesDataType = {\n  data: CategoryDataType[];\n  total: number;\n  totalPages: number;\n  loading: boolean;\n};\n\nconst pageSize = 10;\n\nconst Categories: React.FC<RouteComponentProps> = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: any) => dispatch(callApiAction(payload, callback));\n\n  const history = useHistory();\n  const query = new URLSearchParams(props.location.search);\n  const page = Math.max(Number(query.get('page')) || 1, 1);\n\n  const [categories, setCategories] = useState<CategoriesDataType>({\n    data: [],\n    total: 0,\n    totalPages: 0,\n    loading: true,\n  });\n  const [createCategoryData, setCreateCategoryData] = useState({ show: false, initialValues: initialValuesCreate });\n  const [popupDeleteCategory, setPopupDeleteCategory] = useState({ show: false, id: '', name: '' });\n  const [popupDeleteCategory2, setPopupDeleteCategory2] = useState({ show: false, id: '', name: '' });\n  const [fromDate, setFromDate] = useState<any>(null);\n  const [toDate, setToDate] = useState<any>(null);\n  const [searchName, setSearchName] = useState('');\n\n  const pageChange = (newPage: number) => {\n    if (page !== newPage) {\n      history.push(`?page=${newPage}`);\n      getCategories(newPage, searchName);\n    }\n  };\n\n  useEffect(() => {\n    getCategories(page, searchName);\n  }, [fromDate, toDate]);\n\n  let noItems = <div />;\n\n  if (!categories.loading) {\n    if (!categories.total) noItems = <div>{t('no-items-found')}</div>;\n  }\n\n  const getCategories = (newPage: number, searchName: string) => {\n    setCategories({ ...categories, loading: true });\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.adminGetMobilityCategories(\n          newPage,\n          searchName,\n          fromDate ? fromDate.getTime() / 1000 : null,\n          toDate ? toDate.getTime() / 1000 + 86399 : null,\n        ),\n      },\n      (response: any) => {\n        const { status, data } = response;\n        if (status === SUCCESS) {\n          setCategories({\n            data: data.data.map((item: any, index: number) => {\n              return { ...item, no: index + 1 + pageSize * (newPage - 1) };\n            }),\n            total: data.total,\n            totalPages: Math.ceil(data.total / pageSize),\n            loading: false,\n          });\n          if (page !== newPage) history.push(`?page=${newPage}`);\n        } else {\n          setCategories((categories: any) => {\n            return { ...categories, loading: false };\n          });\n        }\n      },\n    );\n  };\n\n  const handleDeleteCategory = (id: string, password: string) => {\n    setPopupDeleteCategory({ show: false, id: '', name: '' });\n    setCategories({ ...categories, loading: true });\n    callApi({ method: 'post', api: config.rest.confirmPassword(), body: { password } }, (response: any) => {\n      const { status } = response;\n      if (status === SUCCESS) {\n        callApi({ method: 'delete', api: config.rest.adminDeleteMobilityCategory(id) }, (response: any) => {\n          const { status } = response;\n          if (status === SUCCESS) {\n            getCategories(page, searchName);\n          } else\n            setCategories((categories: any) => {\n              return { ...categories, loading: false };\n            });\n        });\n      } else\n        setCategories((categories: any) => {\n          return { ...categories, loading: false };\n        });\n    });\n  };\n\n  return (\n    <div style={{ width: '90%', margin: '10px auto' }}>\n      <ModalCreateCategory\n        callApi={callApi}\n        initialValues={createCategoryData.initialValues}\n        show={createCategoryData.show}\n        handleClose={() => setCreateCategoryData({ show: false, initialValues: initialValuesCreate })}\n        searchCategories={() => getCategories(page, searchName)}\n      />\n      <ConfirmPopup\n        isVisible={popupDeleteCategory.show}\n        title=\"Delete Category\"\n        content={`Are you sure to delete the category ${popupDeleteCategory.name}`}\n        leftButtonText=\"No\"\n        rightButtonText=\"Yes\"\n        leftButtonOnPress={() => setPopupDeleteCategory({ show: false, id: '', name: '' })}\n        rightButtonOnPress={() => {\n          setPopupDeleteCategory2({ show: true, id: popupDeleteCategory.id, name: popupDeleteCategory.name });\n          setPopupDeleteCategory({ show: false, id: '', name: '' });\n        }}\n      />\n      <ConfirmPopupPassword\n        isVisible={popupDeleteCategory2.show}\n        title=\"Delete Category\"\n        leftButtonText=\"Cancel\"\n        rightButtonText=\"Delete\"\n        content={`Please enter your password to delete category \"${popupDeleteCategory2.name}\"!`}\n        callback={(password: string) => handleDeleteCategory(popupDeleteCategory2.id, password)}\n        handleClose={() => setPopupDeleteCategory2({ show: false, id: '', name: '' })}\n      />\n      <div>\n        <h2>Category Management</h2>\n        <div className=\"d-flex align-items-center mt-4\" style={{ marginBottom: '2.4rem' }}>\n          <Search\n            className=\"mr-5\"\n            searchName={searchName}\n            setSearchName={setSearchName}\n            searchEmpty={true}\n            callbackSearch={(searchName: string) => getCategories(1, searchName)}\n          />\n          <div>From date:</div>\n          <div>\n            <DatePicker maxDate={toDate || new Date()} date={fromDate} setDate={setFromDate} />\n          </div>\n          <div>To date:</div>\n          <div>\n            <DatePicker minDate={fromDate} date={toDate} setDate={setToDate} />\n          </div>\n          <div style={{ textAlign: 'right', flex: 1 }}>\n            <CButton\n              color=\"primary\"\n              onClick={() =>\n                setCreateCategoryData({\n                  show: true,\n                  initialValues: {\n                    title: '',\n                    description: '',\n                  },\n                })\n              }\n            >\n              Add new category\n            </CButton>\n          </div>\n        </div>\n      </div>\n      <div style={{ minHeight: '65vh', textAlign: 'center' }}>\n        <CDataTable\n          items={categories.data}\n          fields={fields}\n          loading={categories.loading}\n          noItemsViewSlot={noItems}\n          hover\n          striped\n          scopedSlots={{\n            title: (item: CategoryDataType) => <td className=\"align-middle\">{item.title}</td>,\n            description: (item: CategoryDataType) => (\n              <td title={item.description.length > 90 ? item.description : ''} className=\"align-middle\">\n                {item.description.length > 90 ? item.description.substring(0, 87) + '...' : item.description}\n              </td>\n            ),\n            created_date: (item: CategoryDataType) => (\n              <td className=\"align-middle\">{moment(item.created_date * 1000).format('DD/MM/YYYY')}</td>\n            ),\n            number_of_videos: (item: CategoryDataType) => <td className=\"align-middle\">{item.total_video}</td>,\n            action: (item: any) => (\n              <td className=\"align-middle\">\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  style={{\n                    marginRight: 10,\n                  }}\n                  onClick={() => setPopupDeleteCategory({ show: true, id: item.id, name: item.title })}\n                >\n                  <i className=\"fas fa-trash-alt\"> </i>\n                </CButton>\n                <CButton\n                  color=\"primary\"\n                  variant=\"outline\"\n                  shape=\"square\"\n                  size=\"sm\"\n                  onClick={() => history.push(`/admin/mobility/categories/${item.id}`)}\n                >\n                  <i className=\"fas fa-pencil-alt\"> </i>\n                </CButton>\n              </td>\n            ),\n          }}\n        />\n      </div>\n      {pagination(categories.totalPages, page, pageChange, categories.total)}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  centered?: boolean;\n  label: string;\n  width?: number;\n  style?: any;\n}\n\nconst FieldName: React.FC<Props> = (props) => {\n  let { className, label, children, width, centered, style } = props;\n  width = width || 110;\n\n  return (\n    <div className={`d-flex mb-3 ${centered ? 'align-items-center' : ''} ${className || ''}`} style={style}>\n      <div style={{ minWidth: width, marginTop: 6 }}>{label}</div>\n      <div style={{ width: `calc(100% - ${width}px)` }}>{children}</div>\n    </div>\n  );\n};\n\nexport default FieldName;\n"],"sourceRoot":""}