{"version":3,"sources":["views/user/consulting/TreatmentEmergencies.tsx","views/user/consulting/TreatmentMainPage.tsx","components/search/Search.tsx"],"names":["TreatmentEmergenciesPage","props","next","back","className","to","variant","color","style","marginRight","width","onClick","TreatmentMainPage","scaleDown","transitions","history","useHistory","dispatch","useDispatch","callApi","payload","callback","callApiAction","useState","data","title","list_diseases","loading","treatments","setTreatment","searchName","setSearchName","show","searchSuggestionNames","setSearchSuggestionNames","step","setStep","treatmentId","setTreatmentId","useEffect","method","api","config","rest","getAllTreatments","response","status","SUCCESS","group_treatments","searchParams","dropdown","length","map","item","fontSize","tile","id","callbackSearch","getSearchTreatments","trim","callbackEmpty","TreatmentSelect","Search","placeholder","treatment","index","md","title_treatments","columnWidth","appear","appeared","enter","entered","leaved","gutterHeight","disease","ls","set","TreatmentEmergencies","push","inputStyle","searchEmpty","validate","isNew","timeoutSearch","minLengthSearch","timeout","useRef","firstTime","setFirstTime","current","clearTimeout","trimmedSearchName","setTimeout","position","paddingLeft","type","value","maxLength","onChange","e","target","onKeyPress","key","left","top"],"mappings":"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","file":"static/js/68.38dd411d.chunk.js","sourcesContent":["import React from 'react';\nimport { CButton, CContainer } from '@coreui/react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  next: () => void;\n  back: () => void;\n}\n\nconst TreatmentEmergenciesPage: React.FC<Props> = (props) => {\n  const { next, back } = props;\n\n  return (\n    <div className=\"treatment-emergencies-page\">\n      <CContainer>\n        <div className=\"treatment-emergencies-page__title\">\n          <h2> Selected treatment</h2>\n          <h5 className=\"treatment-emergencies-page-subtitle\">Call 112 immediately for emergencies</h5>\n          <p className=\"treatment-emergencies-page--quote\">\n            If you have acute symptoms such as severe shortness of breath, dial 112 directly.\n          </p>\n        </div>\n        <div className=\"treatment-emergencies-page__content\">\n          <div className=\"treatment-emergencies-page__content--rules\">\n            <h5 className=\"treatment-emergencies-page__content--rules-title\">This is how it works</h5>\n            <span>- Fill out on appointments request</span> <br />\n            <span>- Receive appointment confirmation email</span>\n            <br />\n            <span>- Talk to nurse via video using the HB app</span>\n            <br />\n          </div>\n\n          <h5 className=\"treatment-emergencies-page__content--question\">Help or question?</h5>\n          <span className=\"treatment-emergencies-page__content--contact-us\">\n            Contact us via <Link to=\"#\">support email</Link>{' '}\n          </span>\n        </div>\n        <CButton\n          variant=\"outline\"\n          color=\"primary\"\n          style={{ marginRight: '20px', width: '100px' }}\n          onClick={() => back()}\n        >\n          Back\n        </CButton>\n        <CButton variant=\"outline\" color=\"primary\" style={{ width: '100px' }} onClick={() => next()}>\n          Continue\n        </CButton>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default TreatmentEmergenciesPage;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { CCol, CRow, CButton, CContainer } from '@coreui/react';\nimport { useDispatch } from 'react-redux';\nimport { callApiAction, SUCCESS } from '../../../store/callApi/actions';\nimport config from '../../../config';\nimport Search from '../../../components/search/Search';\nimport StackGrid, { transitions } from 'react-stack-grid';\nimport TreatmentEmergenciesPage from './TreatmentEmergencies';\nimport { ls } from '../../../extensions';\n\nconst TreatmentMainPage: React.FC<RouteComponentProps> = (props) => {\n  const { scaleDown } = transitions;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const callApi = (payload: any, callback?: (result: any) => void) => dispatch(callApiAction(payload, callback));\n  const [treatments, setTreatment] = useState<any>({ data: [{ title: '', list_diseases: [] }], loading: false });\n  const [searchName, setSearchName] = useState('');\n  const [searchSuggestionNames, setSearchSuggestionNames] = useState({ show: false, list_diseases: [] });\n  const [step, setStep] = useState<number>(1);\n  const [treatmentId, setTreatmentId] = useState('');\n\n  const getAllTreatments = () => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getAllTreatments(),\n        loading: true,\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          setTreatment({\n            data: data.group_treatments,\n            loading: false,\n          });\n        }\n      },\n    );\n  };\n\n  useEffect(() => {\n    getAllTreatments();\n  }, []);\n\n  const getDiseasessNameSearch = (searchName: string) => {\n    callApi(\n      {\n        method: 'get',\n        api: config.rest.getSearchTreatments(searchName),\n        loading: true,\n      },\n      (response) => {\n        const { data, status } = response;\n        if (status === SUCCESS) {\n          if (status === SUCCESS && searchName.trim()) {\n            setSearchSuggestionNames({ show: true, ...data });\n          }\n        }\n      },\n    );\n  };\n  const showSuggestionName = () => {\n    if (searchSuggestionNames.list_diseases.length === 0)\n      return <li className=\"list-group-item disabled\">No Result</li>;\n    return searchSuggestionNames.list_diseases.map((item: { id: string; tile: string }) => (\n      <li className=\"list-group-item\" key={item.id} onClick={() => setStep(2)}>\n        <div className=\"btn-item\" onClick={() => setStep(2)}>\n          <i className=\"fas fa-user-nurse\" style={{ fontSize: '1rem', marginRight: '20px' }}></i>\n          <div className=\"treatment-item--title\">{item.tile} </div>\n        </div>\n      </li>\n    ));\n  };\n\n  const searchParams = {\n    className: 'header-topic--wrapper__search--selection__world',\n    searchName,\n    setSearchName,\n    dropdown: searchSuggestionNames.show ? (\n      <div className=\"header-topic--wrapper__search--selection__suggestion\">\n        <ul className=\"list-group\">{showSuggestionName()}</ul>\n      </div>\n    ) : null,\n    callbackSearch: getDiseasessNameSearch,\n    callbackEmpty: () => setSearchSuggestionNames({ show: false, list_diseases: [] }),\n  };\n\n  const TreatmentSelect = (\n    <div className=\"treatment-main-page--wrapper\">\n      <CContainer>\n        <div className=\"treatment-main-page__header\">\n          <h3 className=\"treatment-main-page__header--title\">Our treatments</h3>\n          <p className=\"treatment-main-page__header--content\">\n            Our doctors can treat almost anything that a traditional general practitioner would treat. If necessary, our\n            doctors will provide you with prescriptions, sick notes and referrals\n          </p>\n\n          <Search {...searchParams} className=\"videos--saved__search\" placeholder=\"Search treatment\" />\n        </div>\n        <CRow>\n          {treatments.data.length === 0\n            ? 'No data'\n            : treatments.data.map((treatment: any, index: number) => (\n                <CCol key={index} md={4}>\n                  <div className=\"treatment-list-item\">\n                    <h4 className=\"treatment-item--title\">{treatment.title_treatments}</h4>\n                    <StackGrid\n                      columnWidth=\"100%\"\n                      appear={scaleDown.appear}\n                      appeared={scaleDown.appeared}\n                      enter={scaleDown.enter}\n                      entered={scaleDown.entered}\n                      leaved={scaleDown.leaved}\n                      gutterHeight={15}\n                    >\n                      {treatment.list_diseases.map((disease: any) => (\n                        <CButton\n                          key={disease.id}\n                          color=\"primary\"\n                          className=\"treatment-item--block\"\n                          onClick={() => {\n                            setStep(2);\n                            setTreatmentId(disease.id);\n                            ls.set('treatmentTitle', disease.tile);\n                          }}\n                        >\n                          <i className=\"fas fa-user-nurse\" style={{ fontSize: '1rem' }}></i>\n                          <div className=\"treatment-item--title\">{disease.tile} </div>\n                          <i className=\"fas fa-arrow-right\"></i>\n                        </CButton>\n                      ))}\n                    </StackGrid>\n                  </div>\n                </CCol>\n              ))}\n        </CRow>\n      </CContainer>\n    </div>\n  );\n\n  if (step === 1) {\n    return TreatmentSelect;\n  }\n\n  return (\n    <TreatmentEmergenciesPage\n      back={() => setStep(1)}\n      next={() => history.push(`/consulting/treatments/${treatmentId}`)}\n    />\n  );\n};\n\nexport default TreatmentMainPage;\n","import { CInput } from '@coreui/react';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  inputStyle?: any;\n  className?: string;\n  searchName?: string;\n  setSearchName?: (params: any) => void;\n  dropdown?: any;\n  callbackSearch?: (params: any) => void;\n  callbackEmpty?: () => void;\n  placeholder?: string;\n  searchEmpty?: boolean;\n  timeoutSearch?: number;\n  validate?: any;\n  minLengthSearch?: number;\n  isNew?: boolean;\n}\n\nconst Search: React.FC<Props> = (props) => {\n  const {\n    inputStyle,\n    className,\n    searchName,\n    setSearchName,\n    dropdown,\n    callbackSearch,\n    callbackEmpty,\n    placeholder,\n    searchEmpty,\n    validate,\n    isNew,\n  } = props;\n  let { timeoutSearch, minLengthSearch }: any = props;\n  if (!timeoutSearch) timeoutSearch = 1000;\n  if (!minLengthSearch) minLengthSearch = 1;\n\n  const timeout = useRef<any>(0);\n  const [firstTime, setFirstTime] = useState(false);\n\n  useEffect(() => {\n    if (firstTime) {\n      if (timeout.current) clearTimeout(timeout.current);\n      const trimmedSearchName: any = searchName?.trim();\n      if (trimmedSearchName?.length >= minLengthSearch || searchEmpty) {\n        timeout.current = setTimeout(() => {\n          callbackSearch?.(trimmedSearchName);\n        }, timeoutSearch);\n      }\n    } else setFirstTime(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchName]);\n\n  const handleChange = (e: any) => {\n    if (validate && !validate(e)) return;\n    const value = e.target.value;\n    setSearchName?.(value);\n    !value.trim() && callbackEmpty && callbackEmpty?.();\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === 'Enter') {\n      if (timeout.current) clearTimeout(timeout.current);\n      const trimmedSearchName: any = searchName?.trim();\n      if (trimmedSearchName?.length >= minLengthSearch || searchEmpty) {\n        callbackSearch?.(trimmedSearchName);\n      }\n    }\n  };\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      <CInput\n        style={{ paddingLeft: 32, ...inputStyle }}\n        type=\"text\"\n        placeholder={placeholder || 'Search'}\n        value={searchName}\n        maxLength={50}\n        onChange={handleChange}\n        onKeyPress={handleKeyDown}\n      />\n      {isNew ? (\n        <i\n          style={{ position: 'absolute', left: 10, top: 8, color: 'var(--nightblue-100)', fontSize: 20 }}\n          className=\"hb-icon-search\"\n        />\n      ) : (\n        <i style={{ position: 'absolute', left: 10, top: 11, color: '#777' }} className=\"fa fa-search icon\" />\n      )}\n\n      {dropdown}\n    </div>\n  );\n};\n\nexport default Search;\n"],"sourceRoot":""}